2022-10-23 11:56:30 info: ---------------------------------------
2022-10-23 11:56:30 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-23 11:56:30 info: ---------------------------------------
2022-10-23 11:56:41 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (4 ms)
    × should have all TODO comments removed (7 ms)
    √ `getAnonName` should not contain unneeded console.log calls (3 ms)
    √ should call `new Promise()` (1 ms)
    × should take a single argument (12 ms)
    × `resolve()` should be called with a one argument (1 ms)
    × `reject()` should be called with a one argument (2 ms)
    × should resolve when called with a string argument (4 ms)
    √ should reject with an Error object when called without an argument (3 ms)

  ● getAnonName › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.toBeFalsy (test-runner/unit-test-helpers.js:105:42)

  ● getAnonName › should take a single argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 2

      58 |
      59 |   test('should take a single argument', () => {
    > 60 |     expect(state.paramCount).toBe(1);
         |                              ^
      61 |   });
      62 |
      63 |   test('`resolve()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:60:30)

  ● getAnonName › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

      62 |
      63 |   test('`resolve()` should be called with a one argument', () => {
    > 64 |     expect(state.resolve).toBe(1);
         |                           ^
      65 |   });
      66 |
      67 |   test('`reject()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:64:27)

  ● getAnonName › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

      66 |
      67 |   test('`reject()` should be called with a one argument', () => {
    > 68 |     expect(state.reject).toBe(1);
         |                          ^
      69 |   });
      70 |
      71 |   test('should resolve when called with a string argument', async () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:68:26)

  ● getAnonName › should resolve when called with a string argument

    expect(received).resolves.toEqual()

    Received promise rejected instead of resolved
    Rejected to value: [TypeError: callback is not a function]

      78 |     timeoutSpy.mockRestore();
      79 |     expect(promise).toBeInstanceOf(Promise);
    > 80 |     return expect(promise).resolves.toEqual('John Doe');
         |            ^
      81 |   });
      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:80:12)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

Test Suites: 1 failed, 1 total
Tests:       5 failed, 4 passed, 9 total
Snapshots:   0 total
Time:        3.571 s, estimated 4 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-23 11:56:47 error: *** ESLint Report ***

ex1-johnWho.js
  23:5  warning  Remove commented-out code  hyf/no-commented-out-code
  27:5  warning  Remove commented-out code  hyf/no-commented-out-code
  29:5  warning  Remove commented-out code  hyf/no-commented-out-code
  35:5  warning  Remove commented-out code  hyf/no-commented-out-code
  37:5  warning  Remove commented-out code  hyf/no-commented-out-code

✖ 5 problems (0 errors, 5 warnings)


2022-10-23 11:57:30 info: ---------------------------------------
2022-10-23 11:57:30 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-23 11:57:30 info: ---------------------------------------
2022-10-23 11:57:36 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (3 ms)
    × should have all TODO comments removed (2 ms)
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    √ should call `new Promise()`
    × should take a single argument (3 ms)
    × `resolve()` should be called with a one argument (1 ms)
    × `reject()` should be called with a one argument (1 ms)
    × should resolve when called with a string argument (2 ms)
    √ should reject with an Error object when called without an argument (2 ms)

  ● getAnonName › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.toBeFalsy (test-runner/unit-test-helpers.js:105:42)

  ● getAnonName › should take a single argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 2

      58 |
      59 |   test('should take a single argument', () => {
    > 60 |     expect(state.paramCount).toBe(1);
         |                              ^
      61 |   });
      62 |
      63 |   test('`resolve()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:60:30)

  ● getAnonName › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

      62 |
      63 |   test('`resolve()` should be called with a one argument', () => {
    > 64 |     expect(state.resolve).toBe(1);
         |                           ^
      65 |   });
      66 |
      67 |   test('`reject()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:64:27)

  ● getAnonName › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

      66 |
      67 |   test('`reject()` should be called with a one argument', () => {
    > 68 |     expect(state.reject).toBe(1);
         |                          ^
      69 |   });
      70 |
      71 |   test('should resolve when called with a string argument', async () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:68:26)

  ● getAnonName › should resolve when called with a string argument

    expect(received).resolves.toEqual()

    Received promise rejected instead of resolved
    Rejected to value: [TypeError: callback is not a function]

      78 |     timeoutSpy.mockRestore();
      79 |     expect(promise).toBeInstanceOf(Promise);
    > 80 |     return expect(promise).resolves.toEqual('John Doe');
         |            ^
      81 |   });
      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:80:12)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

Test Suites: 1 failed, 1 total
Tests:       5 failed, 4 passed, 9 total
Snapshots:   0 total
Time:        1.565 s, estimated 4 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-24 12:00:22 info: ---------------------------------------
2022-10-24 12:00:22 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-24 12:00:22 info: ---------------------------------------
2022-10-24 12:00:27 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (2 ms)
    × should have all TODO comments removed (3 ms)
    √ `getAnonName` should not contain unneeded console.log calls (2 ms)
    √ should call `new Promise()`
    × should take a single argument (2 ms)
    × `resolve()` should be called with a one argument (1 ms)
    × `reject()` should be called with a one argument (1 ms)
    × should resolve when called with a string argument (2 ms)
    √ should reject with an Error object when called without an argument (2 ms)

  ● getAnonName › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.toBeFalsy (test-runner/unit-test-helpers.js:105:42)

  ● getAnonName › should take a single argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 2

      58 |
      59 |   test('should take a single argument', () => {
    > 60 |     expect(state.paramCount).toBe(1);
         |                              ^
      61 |   });
      62 |
      63 |   test('`resolve()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:60:30)

  ● getAnonName › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

      62 |
      63 |   test('`resolve()` should be called with a one argument', () => {
    > 64 |     expect(state.resolve).toBe(1);
         |                           ^
      65 |   });
      66 |
      67 |   test('`reject()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:64:27)

  ● getAnonName › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

      66 |
      67 |   test('`reject()` should be called with a one argument', () => {
    > 68 |     expect(state.reject).toBe(1);
         |                          ^
      69 |   });
      70 |
      71 |   test('should resolve when called with a string argument', async () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:68:26)

  ● getAnonName › should resolve when called with a string argument

    expect(received).resolves.toEqual()

    Received promise rejected instead of resolved
    Rejected to value: [TypeError: callback is not a function]

      78 |     timeoutSpy.mockRestore();
      79 |     expect(promise).toBeInstanceOf(Promise);
    > 80 |     return expect(promise).resolves.toEqual('John Doe');
         |            ^
      81 |   });
      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:80:12)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

Test Suites: 1 failed, 1 total
Tests:       5 failed, 4 passed, 9 total
Snapshots:   0 total
Time:        1.572 s, estimated 2 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-24 12:01:27 info: ---------------------------------------
2022-10-24 12:01:27 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-24 12:01:27 info: ---------------------------------------
2022-10-24 12:01:32 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (2 ms)
    × should have all TODO comments removed (2 ms)
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    √ should call `new Promise()`
    √ should take a single argument (1 ms)
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    √ should resolve when called with a string argument (2 ms)
    √ should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.toBeFalsy (test-runner/unit-test-helpers.js:105:42)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 8 passed, 9 total
Snapshots:   0 total
Time:        1.472 s, estimated 2 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-24 12:02:13 info: ---------------------------------------
2022-10-24 12:02:13 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-24 12:02:13 info: ---------------------------------------
2022-10-24 12:02:19 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (3 ms)
    × should have all TODO comments removed (3 ms)
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    √ should call `new Promise()`
    √ should take a single argument (1 ms)
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument (1 ms)
    √ should resolve when called with a string argument (3 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.toBeFalsy (test-runner/unit-test-helpers.js:105:42)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "undefined Doe"

      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
    > 92 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      93 |   });
      94 | });
      95 |

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:92:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        1.543 s, estimated 2 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-24 12:03:03 info: ---------------------------------------
2022-10-24 12:03:03 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-24 12:03:03 info: ---------------------------------------
2022-10-24 12:03:08 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (2 ms)
    × should have all TODO comments removed (2 ms)
    √ `getAnonName` should not contain unneeded console.log calls (2 ms)
    √ should call `new Promise()`
    √ should take a single argument
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument (1 ms)
    √ should resolve when called with a string argument (3 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.toBeFalsy (test-runner/unit-test-helpers.js:105:42)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "undefined Doe"

      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
    > 92 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      93 |   });
      94 | });
      95 |

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:92:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        1.536 s, estimated 2 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-24 12:03:36 info: ---------------------------------------
2022-10-24 12:03:36 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-24 12:03:36 info: ---------------------------------------
2022-10-24 12:03:42 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (2 ms)
    × should have all TODO comments removed (2 ms)
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    √ should call `new Promise()` (1 ms)
    √ should take a single argument
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument (1 ms)
    √ should resolve when called with a string argument (4 ms)
    √ should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.toBeFalsy (test-runner/unit-test-helpers.js:105:42)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 8 passed, 9 total
Snapshots:   0 total
Time:        1.528 s, estimated 2 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-24 12:04:22 info: ---------------------------------------
2022-10-24 12:04:22 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-24 12:04:22 info: ---------------------------------------
2022-10-24 12:04:27 info: All unit tests passed.
2022-10-24 12:04:37 info: All steps were completed successfully
2022-10-24 12:04:47 info: ---------------------------------------
2022-10-24 12:04:47 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-24 12:04:47 info: ---------------------------------------
2022-10-24 12:04:52 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (4 ms)
    √ should have all TODO comments removed (2 ms)
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    √ should call `new Promise()`
    √ should take a single argument
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument (1 ms)
    √ should resolve when called with a string argument (2 ms)
    × should reject with an Error object when called without an argument (3 ms)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "undefined Doe"

      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
    > 92 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      93 |   });
      94 | });
      95 |

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:92:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 8 passed, 9 total
Snapshots:   0 total
Time:        1.465 s, estimated 2 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-24 12:05:41 info: ---------------------------------------
2022-10-24 12:05:41 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-24 12:05:41 info: ---------------------------------------
2022-10-24 12:05:46 info: All unit tests passed.
2022-10-24 12:05:56 info: All steps were completed successfully
2022-10-24 12:10:34 info: -------------------------------------------------
2022-10-24 12:10:34 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-10-24 12:10:34 info: -------------------------------------------------
2022-10-24 12:10:43 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    √ should exist and be executable (5 ms)
    √ should have all TODO comments removed (2 ms)
    √ `checkDoubleDigits` should not contain unneeded console.log calls (2 ms)
    √ should call new Promise() (1 ms)
    × `resolve()` should be called with a one argument (7 ms)
    × `reject()` should be called with a one argument (1 ms)
    √ should be a function that takes a single argument (1 ms)
    × (9) should return a rejected promise with an Error object (4 ms)
    × (10) should return a promise that resolves to "This is a double digit number!" (3 ms)
    × (99) should return a promise that resolves to "This is a double digit number!" (2 ms)
    × (100) should return a rejected promise with an Error object (2 ms)

  ● checkDoubleDigits › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      47 |
      48 |   test('`resolve()` should be called with a one argument', () => {
    > 49 |     expect(state.resolve).toBe(1);
         |                           ^
      50 |   });
      51 |
      52 |   test('`reject()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:49:27)

  ● checkDoubleDigits › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      51 |
      52 |   test('`reject()` should be called with a one argument', () => {
    > 53 |     expect(state.reject).toBe(1);
         |                          ^
      54 |   });
      55 |
      56 |   test('should be a function that takes a single argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:53:26)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf(expected)

    Expected constructor: Error

    Received value has no prototype
    Received value: "Expected a double digit number but got 9"

      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
    > 67 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |                                    ^
      68 |   });
      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {

      at Object.toBeInstanceOf (node_modules/expect/build/index.js:241:22)
      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:67:36)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect(received).resolves.toEqual()

    Received promise rejected instead of resolved
    Rejected to value: "Expected a double digit number but got 10"

      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);
    > 75 |     return expect(promise).resolves.toEqual(
         |            ^
      76 |       expect.stringContaining('This is a double digit number!')
      77 |     );
      78 |   });

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:75:12)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {
    > 71 |     expect.assertions(3);
         |            ^
      72 |     expect(exported).toBeDefined();
      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:71:12)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    expect(received).resolves.toEqual()

    Received promise rejected instead of resolved
    Rejected to value: "Expected a double digit number but got 99"

      82 |     const promise = checkDoubleDigits(99);
      83 |     expect(promise).toBeInstanceOf(Promise);
    > 84 |     return expect(promise).resolves.toEqual(
         |            ^
      85 |       expect.stringContaining('This is a double digit number!')
      86 |     );
      87 |   });

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:84:12)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      79 |
      80 |   test('(99) should return a promise that resolves to "This is a double digit number!"', () => {
    > 81 |     expect.assertions(2);
         |            ^
      82 |     const promise = checkDoubleDigits(99);
      83 |     expect(promise).toBeInstanceOf(Promise);
      84 |     return expect(promise).resolves.toEqual(

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:81:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf(expected)

    Expected constructor: Error

    Received value has no prototype
    Received value: "Expected a double digit number but got 100"

      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
    > 93 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |                                    ^
      94 |   });
      95 | });
      96 |

      at Object.toBeInstanceOf (node_modules/expect/build/index.js:241:22)
      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:93:36)

Test Suites: 1 failed, 1 total
Tests:       6 failed, 5 passed, 11 total
Snapshots:   0 total
Time:        2.913 s, estimated 5 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-10-24 12:10:49 error: *** ESLint Report ***

ex2-checkDoubleDigits.js
  3:9  error  'resolveConfig' is assigned a value but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2022-10-24 12:12:18 info: -------------------------------------------------
2022-10-24 12:12:18 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-10-24 12:12:18 info: -------------------------------------------------
2022-10-24 12:12:45 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js (9.083 s)
  checkDoubleDigits
    √ should exist and be executable (5 ms)
    √ should have all TODO comments removed (5 ms)
    √ `checkDoubleDigits` should not contain unneeded console.log calls (3 ms)
    √ should call new Promise() (4 ms)
    × `resolve()` should be called with a one argument (47 ms)
    × `reject()` should be called with a one argument (12 ms)
    √ should be a function that takes a single argument (2 ms)
    × (9) should return a rejected promise with an Error object (16 ms)
    × (10) should return a promise that resolves to "This is a double digit number!" (4 ms)
    × (99) should return a promise that resolves to "This is a double digit number!" (2 ms)
    × (100) should return a rejected promise with an Error object (1 ms)

  ● checkDoubleDigits › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      47 |
      48 |   test('`resolve()` should be called with a one argument', () => {
    > 49 |     expect(state.resolve).toBe(1);
         |                           ^
      50 |   });
      51 |
      52 |   test('`reject()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:49:27)

  ● checkDoubleDigits › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      51 |
      52 |   test('`reject()` should be called with a one argument', () => {
    > 53 |     expect(state.reject).toBe(1);
         |                          ^
      54 |   });
      55 |
      56 |   test('should be a function that takes a single argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:53:26)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf(expected)

    Expected constructor: Error
    Received constructor: Function

      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
    > 67 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |                                    ^
      68 |   });
      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {

      at Object.toBeInstanceOf (node_modules/expect/build/index.js:241:22)
      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:67:36)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect(received).resolves.toEqual()

    Received promise rejected instead of resolved
    Rejected to value: [Function anonymous]

      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);
    > 75 |     return expect(promise).resolves.toEqual(
         |            ^
      76 |       expect.stringContaining('This is a double digit number!')
      77 |     );
      78 |   });

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:75:12)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {
    > 71 |     expect.assertions(3);
         |            ^
      72 |     expect(exported).toBeDefined();
      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:71:12)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    expect(received).resolves.toEqual()

    Received promise rejected instead of resolved
    Rejected to value: [Function anonymous]

      82 |     const promise = checkDoubleDigits(99);
      83 |     expect(promise).toBeInstanceOf(Promise);
    > 84 |     return expect(promise).resolves.toEqual(
         |            ^
      85 |       expect.stringContaining('This is a double digit number!')
      86 |     );
      87 |   });

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:84:12)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      79 |
      80 |   test('(99) should return a promise that resolves to "This is a double digit number!"', () => {
    > 81 |     expect.assertions(2);
         |            ^
      82 |     const promise = checkDoubleDigits(99);
      83 |     expect(promise).toBeInstanceOf(Promise);
      84 |     return expect(promise).resolves.toEqual(

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:81:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf(expected)

    Expected constructor: Error
    Received constructor: Function

      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
    > 93 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |                                    ^
      94 |   });
      95 | });
      96 |

      at Object.toBeInstanceOf (node_modules/expect/build/index.js:241:22)
      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:93:36)

Test Suites: 1 failed, 1 total
Tests:       6 failed, 5 passed, 11 total
Snapshots:   0 total
Time:        10.076 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-10-24 12:13:00 error: *** ESLint Report ***

ex2-checkDoubleDigits.js
  3:9  error  'resolveConfig' is assigned a value but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2022-10-24 12:16:13 info: -------------------------------------------------
2022-10-24 12:16:13 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-10-24 12:16:13 info: -------------------------------------------------
2022-10-24 12:16:35 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js (7.777 s)
  checkDoubleDigits
    √ should exist and be executable (13 ms)
    √ should have all TODO comments removed (2 ms)
    √ `checkDoubleDigits` should not contain unneeded console.log calls (4 ms)
    √ should call new Promise() (6 ms)
    × `resolve()` should be called with a one argument (27 ms)
    × `reject()` should be called with a one argument (3 ms)
    √ should be a function that takes a single argument (4 ms)
    × (9) should return a rejected promise with an Error object (11 ms)
    √ (10) should return a promise that resolves to "This is a double digit number!" (6 ms)
    × (99) should return a promise that resolves to "This is a double digit number!" (3 ms)
    × (100) should return a rejected promise with an Error object (3 ms)

  ● checkDoubleDigits › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      47 |
      48 |   test('`resolve()` should be called with a one argument', () => {
    > 49 |     expect(state.resolve).toBe(1);
         |                           ^
      50 |   });
      51 |
      52 |   test('`reject()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:49:27)

  ● checkDoubleDigits › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      51 |
      52 |   test('`reject()` should be called with a one argument', () => {
    > 53 |     expect(state.reject).toBe(1);
         |                          ^
      54 |   });
      55 |
      56 |   test('should be a function that takes a single argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:53:26)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf(expected)

    Expected constructor: Error
    Received constructor: Function

      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
    > 67 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |                                    ^
      68 |   });
      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {

      at Object.toBeInstanceOf (node_modules/expect/build/index.js:241:22)
      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:67:36)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    expect(received).resolves.toEqual()

    Received promise rejected instead of resolved
    Rejected to value: [Function anonymous]

      82 |     const promise = checkDoubleDigits(99);
      83 |     expect(promise).toBeInstanceOf(Promise);
    > 84 |     return expect(promise).resolves.toEqual(
         |            ^
      85 |       expect.stringContaining('This is a double digit number!')
      86 |     );
      87 |   });

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:84:12)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      79 |
      80 |   test('(99) should return a promise that resolves to "This is a double digit number!"', () => {
    > 81 |     expect.assertions(2);
         |            ^
      82 |     const promise = checkDoubleDigits(99);
      83 |     expect(promise).toBeInstanceOf(Promise);
      84 |     return expect(promise).resolves.toEqual(

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:81:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf(expected)

    Expected constructor: Error
    Received constructor: Function

      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
    > 93 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |                                    ^
      94 |   });
      95 | });
      96 |

      at Object.toBeInstanceOf (node_modules/expect/build/index.js:241:22)
      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:93:36)

Test Suites: 1 failed, 1 total
Tests:       5 failed, 6 passed, 11 total
Snapshots:   0 total
Time:        8.546 s, estimated 10 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-10-24 12:16:49 error: *** ESLint Report ***

ex2-checkDoubleDigits.js
  3:9  error  'resolveConfig' is assigned a value but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2022-10-24 12:17:48 info: -------------------------------------------------
2022-10-24 12:17:48 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-10-24 12:17:48 info: -------------------------------------------------
2022-10-24 12:18:14 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js (6.057 s)
  checkDoubleDigits
    √ should exist and be executable (13 ms)
    √ should have all TODO comments removed (3 ms)
    √ `checkDoubleDigits` should not contain unneeded console.log calls (8 ms)
    √ should call new Promise() (28 ms)
    × `resolve()` should be called with a one argument (10 ms)
    × `reject()` should be called with a one argument (2 ms)
    √ should be a function that takes a single argument (2 ms)
    × (9) should return a rejected promise with an Error object (6 ms)
    × (10) should return a promise that resolves to "This is a double digit number!" (10 ms)
    × (99) should return a promise that resolves to "This is a double digit number!" (2 ms)
    × (100) should return a rejected promise with an Error object (5 ms)

  ● checkDoubleDigits › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      47 |
      48 |   test('`resolve()` should be called with a one argument', () => {
    > 49 |     expect(state.resolve).toBe(1);
         |                           ^
      50 |   });
      51 |
      52 |   test('`reject()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:49:27)

  ● checkDoubleDigits › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      51 |
      52 |   test('`reject()` should be called with a one argument', () => {
    > 53 |     expect(state.reject).toBe(1);
         |                          ^
      54 |   });
      55 |
      56 |   test('should be a function that takes a single argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:53:26)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf(expected)

    Expected constructor: Error

    Received value has no prototype
    Received value: "Expected a double digit number but got 9"

      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
    > 67 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |                                    ^
      68 |   });
      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {

      at Object.toBeInstanceOf (node_modules/expect/build/index.js:241:22)
      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:67:36)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect(received).resolves.toEqual()

    Received promise rejected instead of resolved
    Rejected to value: "Expected a double digit number but got 10"

      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);
    > 75 |     return expect(promise).resolves.toEqual(
         |            ^
      76 |       expect.stringContaining('This is a double digit number!')
      77 |     );
      78 |   });

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:75:12)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {
    > 71 |     expect.assertions(3);
         |            ^
      72 |     expect(exported).toBeDefined();
      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:71:12)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    expect(received).resolves.toEqual()

    Received promise rejected instead of resolved
    Rejected to value: "Expected a double digit number but got 99"

      82 |     const promise = checkDoubleDigits(99);
      83 |     expect(promise).toBeInstanceOf(Promise);
    > 84 |     return expect(promise).resolves.toEqual(
         |            ^
      85 |       expect.stringContaining('This is a double digit number!')
      86 |     );
      87 |   });

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:84:12)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      79 |
      80 |   test('(99) should return a promise that resolves to "This is a double digit number!"', () => {
    > 81 |     expect.assertions(2);
         |            ^
      82 |     const promise = checkDoubleDigits(99);
      83 |     expect(promise).toBeInstanceOf(Promise);
      84 |     return expect(promise).resolves.toEqual(

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:81:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf(expected)

    Expected constructor: Error

    Received value has no prototype
    Received value: "Expected a double digit number but got 100"

      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
    > 93 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |                                    ^
      94 |   });
      95 | });
      96 |

      at Object.toBeInstanceOf (node_modules/expect/build/index.js:241:22)
      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:93:36)

Test Suites: 1 failed, 1 total
Tests:       6 failed, 5 passed, 11 total
Snapshots:   0 total
Time:        6.714 s, estimated 8 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-10-24 12:18:31 error: *** ESLint Report ***

ex2-checkDoubleDigits.js
  3:9  error  'resolveConfig' is assigned a value but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2022-10-24 12:19:16 info: -------------------------------------------------
2022-10-24 12:19:16 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-10-24 12:19:16 info: -------------------------------------------------
2022-10-24 12:19:32 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    √ should exist and be executable (6 ms)
    √ should have all TODO comments removed (2 ms)
    √ `checkDoubleDigits` should not contain unneeded console.log calls (4 ms)
    √ should call new Promise() (2 ms)
    × `resolve()` should be called with a one argument (11 ms)
    × `reject()` should be called with a one argument (1 ms)
    √ should be a function that takes a single argument (1 ms)
    × (9) should return a rejected promise with an Error object (5 ms)
    √ (10) should return a promise that resolves to "This is a double digit number!" (3 ms)
    √ (99) should return a promise that resolves to "This is a double digit number!" (2 ms)
    × (100) should return a rejected promise with an Error object (2 ms)

  ● checkDoubleDigits › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      47 |
      48 |   test('`resolve()` should be called with a one argument', () => {
    > 49 |     expect(state.resolve).toBe(1);
         |                           ^
      50 |   });
      51 |
      52 |   test('`reject()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:49:27)

  ● checkDoubleDigits › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      51 |
      52 |   test('`reject()` should be called with a one argument', () => {
    > 53 |     expect(state.reject).toBe(1);
         |                          ^
      54 |   });
      55 |
      56 |   test('should be a function that takes a single argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:53:26)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf(expected)

    Expected constructor: Error

    Received value has no prototype
    Received value: "Expected a double digit number but got 9"

      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
    > 67 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |                                    ^
      68 |   });
      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {

      at Object.toBeInstanceOf (node_modules/expect/build/index.js:241:22)
      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:67:36)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf(expected)

    Expected constructor: Error

    Received value has no prototype
    Received value: "Expected a double digit number but got 100"

      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
    > 93 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |                                    ^
      94 |   });
      95 | });
      96 |

      at Object.toBeInstanceOf (node_modules/expect/build/index.js:241:22)
      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:93:36)

Test Suites: 1 failed, 1 total
Tests:       4 failed, 7 passed, 11 total
Snapshots:   0 total
Time:        4.792 s, estimated 7 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-10-24 12:19:45 error: *** ESLint Report ***

ex2-checkDoubleDigits.js
  3:9  error  'resolveConfig' is assigned a value but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2022-10-24 12:20:56 info: -------------------------------------------------
2022-10-24 12:20:56 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-10-24 12:20:56 info: -------------------------------------------------
2022-10-24 12:21:06 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    √ should exist and be executable (4 ms)
    √ should have all TODO comments removed (2 ms)
    √ `checkDoubleDigits` should not contain unneeded console.log calls (3 ms)
    √ should call new Promise() (1 ms)
    × `resolve()` should be called with a one argument (7 ms)
    × `reject()` should be called with a one argument (1 ms)
    √ should be a function that takes a single argument (1 ms)
    × (9) should return a rejected promise with an Error object (3 ms)
    √ (10) should return a promise that resolves to "This is a double digit number!" (2 ms)
    √ (99) should return a promise that resolves to "This is a double digit number!" (2 ms)
    × (100) should return a rejected promise with an Error object (4 ms)

  ● checkDoubleDigits › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      47 |
      48 |   test('`resolve()` should be called with a one argument', () => {
    > 49 |     expect(state.resolve).toBe(1);
         |                           ^
      50 |   });
      51 |
      52 |   test('`reject()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:49:27)

  ● checkDoubleDigits › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      51 |
      52 |   test('`reject()` should be called with a one argument', () => {
    > 53 |     expect(state.reject).toBe(1);
         |                          ^
      54 |   });
      55 |
      56 |   test('should be a function that takes a single argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:53:26)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf(expected)

    Expected constructor: Error

    Received value has no prototype
    Received value: "Expected a double digit number but got 9"

      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
    > 67 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |                                    ^
      68 |   });
      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {

      at Object.toBeInstanceOf (node_modules/expect/build/index.js:241:22)
      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:67:36)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf(expected)

    Expected constructor: Error

    Received value has no prototype
    Received value: "Expected a double digit number but got 100"

      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
    > 93 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |                                    ^
      94 |   });
      95 | });
      96 |

      at Object.toBeInstanceOf (node_modules/expect/build/index.js:241:22)
      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:93:36)

Test Suites: 1 failed, 1 total
Tests:       4 failed, 7 passed, 11 total
Snapshots:   0 total
Time:        3.191 s, estimated 5 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-10-24 12:21:16 error: *** ESLint Report ***

ex2-checkDoubleDigits.js
  3:9  error  'resolveConfig' is assigned a value but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2022-10-24 12:21:55 info: -------------------------------------------------
2022-10-24 12:21:55 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-10-24 12:21:55 info: -------------------------------------------------
2022-10-24 12:22:06 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    × should exist and be executable (9 ms)
    √ should have all TODO comments removed (1 ms)
    √ `checkDoubleDigits` should not contain unneeded console.log calls (1 ms)
    × should call new Promise() (1 ms)
    × `resolve()` should be called with a one argument (5 ms)
    × `reject()` should be called with a one argument (1 ms)
    × should be a function that takes a single argument (1 ms)
    × (9) should return a rejected promise with an Error object
    × (10) should return a promise that resolves to "This is a double digit number!" (1 ms)
    × (99) should return a promise that resolves to "This is a double digit number!" (1 ms)
    × (100) should return a rejected promise with an Error object (2 ms)

  ● checkDoubleDigits › should exist and be executable

    expect(received).toBeDefined()

    Received: undefined

      35 |
      36 |   test('should exist and be executable', () => {
    > 37 |     expect(exported).toBeDefined();
         |                      ^
      38 |   });
      39 |
      40 |   testTodosRemoved(() => source);

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:37:22)

  ● checkDoubleDigits › should call new Promise()

    expect(received).toBeDefined()

    Received: undefined

      43 |
      44 |   test('should call new Promise()', () => {
    > 45 |     expect(state.newPromise).toBeDefined();
         |                              ^
      46 |   });
      47 |
      48 |   test('`resolve()` should be called with a one argument', () => {

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:45:30)

  ● checkDoubleDigits › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      47 |
      48 |   test('`resolve()` should be called with a one argument', () => {
    > 49 |     expect(state.resolve).toBe(1);
         |                           ^
      50 |   });
      51 |
      52 |   test('`reject()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:49:27)

  ● checkDoubleDigits › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      51 |
      52 |   test('`reject()` should be called with a one argument', () => {
    > 53 |     expect(state.reject).toBe(1);
         |                          ^
      54 |   });
      55 |
      56 |   test('should be a function that takes a single argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:53:26)

  ● checkDoubleDigits › should be a function that takes a single argument

    expect(received).toBeDefined()

    Received: undefined

      55 |
      56 |   test('should be a function that takes a single argument', () => {
    > 57 |     expect(exported).toBeDefined();
         |                      ^
      58 |     expect(
      59 |       typeof checkDoubleDigits === 'function' && checkDoubleDigits.length === 1
      60 |     ).toBe(true);

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:57:22)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    TypeError: checkDoubleDigits is not a function

      63 |   test('(9) should return a rejected promise with an Error object', () => {
      64 |     expect.assertions(2);
    > 65 |     const promise = checkDoubleDigits(9);
         |                     ^
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);
      68 |   });

      at Object.checkDoubleDigits (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:65:21)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      62 |
      63 |   test('(9) should return a rejected promise with an Error object', () => {
    > 64 |     expect.assertions(2);
         |            ^
      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:64:12)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect(received).toBeDefined()

    Received: undefined

      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {
      71 |     expect.assertions(3);
    > 72 |     expect(exported).toBeDefined();
         |                      ^
      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);
      75 |     return expect(promise).resolves.toEqual(

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:72:22)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {
    > 71 |     expect.assertions(3);
         |            ^
      72 |     expect(exported).toBeDefined();
      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:71:12)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    TypeError: checkDoubleDigits is not a function

      80 |   test('(99) should return a promise that resolves to "This is a double digit number!"', () => {
      81 |     expect.assertions(2);
    > 82 |     const promise = checkDoubleDigits(99);
         |                     ^
      83 |     expect(promise).toBeInstanceOf(Promise);
      84 |     return expect(promise).resolves.toEqual(
      85 |       expect.stringContaining('This is a double digit number!')

      at Object.checkDoubleDigits (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:82:21)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      79 |
      80 |   test('(99) should return a promise that resolves to "This is a double digit number!"', () => {
    > 81 |     expect.assertions(2);
         |            ^
      82 |     const promise = checkDoubleDigits(99);
      83 |     expect(promise).toBeInstanceOf(Promise);
      84 |     return expect(promise).resolves.toEqual(

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:81:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    TypeError: checkDoubleDigits is not a function

      89 |   test('(100) should return a rejected promise with an Error object', () => {
      90 |     expect.assertions(2);
    > 91 |     const promise = checkDoubleDigits(100);
         |                     ^
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);
      94 |   });

      at Object.checkDoubleDigits (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:91:21)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received zero assertion calls.

      88 |
      89 |   test('(100) should return a rejected promise with an Error object', () => {
    > 90 |     expect.assertions(2);
         |            ^
      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:90:12)

Test Suites: 1 failed, 1 total
Tests:       9 failed, 2 passed, 11 total
Snapshots:   0 total
Time:        3.356 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-10-24 12:22:16 error: *** ESLint Report ***

ex2-checkDoubleDigits.js
  23:11  error  Parsing error: Unexpected token throw

✖ 1 problem (1 error, 0 warnings)


2022-10-24 12:22:41 info: -------------------------------------------------
2022-10-24 12:22:41 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-10-24 12:22:41 info: -------------------------------------------------
2022-10-24 12:22:52 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    √ should exist and be executable (6 ms)
    √ should have all TODO comments removed (2 ms)
    √ `checkDoubleDigits` should not contain unneeded console.log calls (3 ms)
    √ should call new Promise() (2 ms)
    × `resolve()` should be called with a one argument (7 ms)
    × `reject()` should be called with a one argument (2 ms)
    √ should be a function that takes a single argument (1 ms)
    √ (9) should return a rejected promise with an Error object (3 ms)
    × (10) should return a promise that resolves to "This is a double digit number!" (2 ms)
    × (99) should return a promise that resolves to "This is a double digit number!" (2 ms)
    √ (100) should return a rejected promise with an Error object (2 ms)

  ● checkDoubleDigits › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      47 |
      48 |   test('`resolve()` should be called with a one argument', () => {
    > 49 |     expect(state.resolve).toBe(1);
         |                           ^
      50 |   });
      51 |
      52 |   test('`reject()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:49:27)

  ● checkDoubleDigits › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      51 |
      52 |   test('`reject()` should be called with a one argument', () => {
    > 53 |     expect(state.reject).toBe(1);
         |                          ^
      54 |   });
      55 |
      56 |   test('should be a function that takes a single argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:53:26)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect(received).resolves.toEqual()

    Received promise rejected instead of resolved
    Rejected to value: [Error: Expected a double digit number but got 10]

      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);
    > 75 |     return expect(promise).resolves.toEqual(
         |            ^
      76 |       expect.stringContaining('This is a double digit number!')
      77 |     );
      78 |   });

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:75:12)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {
    > 71 |     expect.assertions(3);
         |            ^
      72 |     expect(exported).toBeDefined();
      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:71:12)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    expect(received).resolves.toEqual()

    Received promise rejected instead of resolved
    Rejected to value: [Error: Expected a double digit number but got 99]

      82 |     const promise = checkDoubleDigits(99);
      83 |     expect(promise).toBeInstanceOf(Promise);
    > 84 |     return expect(promise).resolves.toEqual(
         |            ^
      85 |       expect.stringContaining('This is a double digit number!')
      86 |     );
      87 |   });

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:84:12)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      79 |
      80 |   test('(99) should return a promise that resolves to "This is a double digit number!"', () => {
    > 81 |     expect.assertions(2);
         |            ^
      82 |     const promise = checkDoubleDigits(99);
      83 |     expect(promise).toBeInstanceOf(Promise);
      84 |     return expect(promise).resolves.toEqual(

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:81:12)

Test Suites: 1 failed, 1 total
Tests:       4 failed, 7 passed, 11 total
Snapshots:   0 total
Time:        3.352 s, estimated 4 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-10-24 12:22:59 error: *** ESLint Report ***

ex2-checkDoubleDigits.js
  3:9  error  'resolveConfig' is assigned a value but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2022-10-24 12:23:26 info: -------------------------------------------------
2022-10-24 12:23:26 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-10-24 12:23:26 info: -------------------------------------------------
2022-10-24 12:23:36 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    √ should exist and be executable (5 ms)
    √ should have all TODO comments removed (2 ms)
    √ `checkDoubleDigits` should not contain unneeded console.log calls (3 ms)
    √ should call new Promise() (1 ms)
    × `resolve()` should be called with a one argument (7 ms)
    × `reject()` should be called with a one argument (1 ms)
    √ should be a function that takes a single argument (1 ms)
    √ (9) should return a rejected promise with an Error object (3 ms)
    √ (10) should return a promise that resolves to "This is a double digit number!" (3 ms)
    √ (99) should return a promise that resolves to "This is a double digit number!" (2 ms)
    √ (100) should return a rejected promise with an Error object (2 ms)

  ● checkDoubleDigits › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      47 |
      48 |   test('`resolve()` should be called with a one argument', () => {
    > 49 |     expect(state.resolve).toBe(1);
         |                           ^
      50 |   });
      51 |
      52 |   test('`reject()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:49:27)

  ● checkDoubleDigits › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      51 |
      52 |   test('`reject()` should be called with a one argument', () => {
    > 53 |     expect(state.reject).toBe(1);
         |                          ^
      54 |   });
      55 |
      56 |   test('should be a function that takes a single argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:53:26)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 9 passed, 11 total
Snapshots:   0 total
Time:        3.242 s, estimated 4 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-10-24 12:23:46 error: *** ESLint Report ***

ex2-checkDoubleDigits.js
  3:9  error  'resolveConfig' is assigned a value but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2022-10-24 12:25:32 info: -------------------------------------------------
2022-10-24 12:25:32 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-10-24 12:25:32 info: -------------------------------------------------
2022-10-24 12:25:38 info: All unit tests passed.
2022-10-24 12:25:42 error: *** ESLint Report ***

ex2-checkDoubleDigits.js
  3:9  error  'resolveConfig' is assigned a value but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2022-10-24 12:26:43 info: -------------------------------------------------
2022-10-24 12:26:43 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-10-24 12:26:43 info: -------------------------------------------------
2022-10-24 12:26:48 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    √ should exist and be executable (3 ms)
    √ should have all TODO comments removed (1 ms)
    √ `checkDoubleDigits` should not contain unneeded console.log calls (2 ms)
    √ should call new Promise() (1 ms)
    × `resolve()` should be called with a one argument (6 ms)
    × `reject()` should be called with a one argument (12 ms)
    √ should be a function that takes a single argument (2 ms)
    √ (9) should return a rejected promise with an Error object (2 ms)
    √ (10) should return a promise that resolves to "This is a double digit number!" (1 ms)
    √ (99) should return a promise that resolves to "This is a double digit number!" (1 ms)
    √ (100) should return a rejected promise with an Error object (1 ms)

  ● checkDoubleDigits › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      47 |
      48 |   test('`resolve()` should be called with a one argument', () => {
    > 49 |     expect(state.resolve).toBe(1);
         |                           ^
      50 |   });
      51 |
      52 |   test('`reject()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:49:27)

  ● checkDoubleDigits › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      51 |
      52 |   test('`reject()` should be called with a one argument', () => {
    > 53 |     expect(state.reject).toBe(1);
         |                          ^
      54 |   });
      55 |
      56 |   test('should be a function that takes a single argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:53:26)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 9 passed, 11 total
Snapshots:   0 total
Time:        1.524 s, estimated 2 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-10-24 12:26:53 error: *** ESLint Report ***

ex2-checkDoubleDigits.js
  3:9  error  'resolveConfig' is assigned a value but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2022-10-24 12:27:25 info: -------------------------------------------------
2022-10-24 12:27:25 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-10-24 12:27:25 info: -------------------------------------------------
2022-10-24 12:27:31 info: All unit tests passed.
2022-10-24 12:27:35 error: *** ESLint Report ***

ex2-checkDoubleDigits.js
  3:9  error  'resolveConfig' is assigned a value but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2022-10-24 12:28:07 info: -------------------------------------------------
2022-10-24 12:28:07 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-10-24 12:28:07 info: -------------------------------------------------
2022-10-24 12:28:13 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed (1 ms)
    √ `checkDoubleDigits` should not contain unneeded console.log calls (2 ms)
    √ should call new Promise() (1 ms)
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    √ should be a function that takes a single argument (1 ms)
    × (9) should return a rejected promise with an Error object (3 ms)
    √ (10) should return a promise that resolves to "This is a double digit number!" (2 ms)
    √ (99) should return a promise that resolves to "This is a double digit number!" (1 ms)
    × (100) should return a rejected promise with an Error object (1 ms)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf(expected)

    Expected constructor: Error

    Received value has no prototype
    Received value: "Expected a double digit number but got 9"

      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
    > 67 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |                                    ^
      68 |   });
      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {

      at Object.toBeInstanceOf (node_modules/expect/build/index.js:241:22)
      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:67:36)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf(expected)

    Expected constructor: Error

    Received value has no prototype
    Received value: "Expected a double digit number but got 100"

      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
    > 93 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |                                    ^
      94 |   });
      95 | });
      96 |

      at Object.toBeInstanceOf (node_modules/expect/build/index.js:241:22)
      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:93:36)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 9 passed, 11 total
Snapshots:   0 total
Time:        1.605 s, estimated 2 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-10-24 12:28:17 error: *** ESLint Report ***

ex2-checkDoubleDigits.js
  3:9  error  'resolveConfig' is assigned a value but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2022-10-24 12:29:03 info: -------------------------------------------------
2022-10-24 12:29:03 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-10-24 12:29:03 info: -------------------------------------------------
2022-10-24 12:29:09 info: All unit tests passed.
2022-10-24 12:29:14 error: *** ESLint Report ***

ex2-checkDoubleDigits.js
  3:9  error  'resolveConfig' is assigned a value but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2022-10-24 12:30:17 info: -------------------------------------------------
2022-10-24 12:30:17 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-10-24 12:30:17 info: -------------------------------------------------
2022-10-24 12:30:22 info: All unit tests passed.
2022-10-24 12:30:26 error: *** ESLint Report ***

ex2-checkDoubleDigits.js
  3:9  error  'resolveConfig' is assigned a value but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2022-10-24 12:32:11 info: -------------------------------------------------
2022-10-24 12:32:11 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-10-24 12:32:11 info: -------------------------------------------------
2022-10-24 12:32:16 info: All unit tests passed.
2022-10-24 12:32:24 info: All steps were completed successfully
2022-10-24 12:39:29 info: ---------------------------------------
2022-10-24 12:39:29 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-10-24 12:39:29 info: ---------------------------------------
2022-10-24 12:39:35 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    √ should exist and be executable (2 ms)
    × should have all TODO comments removed (2 ms)
    √ should call `new Promise()`
    × `resolve()` should be called with a one argument (2 ms)
    √ `reject()` should be called with a one argument (1 ms)
    √ should resolve when the die settles successfully (3 ms)
    √ should reject with an Error when the die rolls off the table (2 ms)

  ● rollDie › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.toBeFalsy (test-runner/unit-test-helpers.js:105:42)

  ● rollDie › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 2

      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {
    > 44 |     expect(state.resolve).toBe(1);
         |                           ^
      45 |   });
      46 |
      47 |   test('`reject()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:44:27)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 5 passed, 7 total
Snapshots:   0 total
Time:        1.41 s, estimated 4 s
Ran all test suites matching /ex3-rollDie.test.js/i.
2022-10-24 12:41:33 info: ---------------------------------------
2022-10-24 12:41:33 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-10-24 12:41:33 info: ---------------------------------------
2022-10-24 12:41:39 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    √ should exist and be executable (3 ms)
    × should have all TODO comments removed (4 ms)
    √ should call `new Promise()` (1 ms)
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument (1 ms)
    √ should resolve when the die settles successfully (4 ms)
    √ should reject with an Error when the die rolls off the table (3 ms)

  ● rollDie › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.toBeFalsy (test-runner/unit-test-helpers.js:105:42)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        2.227 s
Ran all test suites matching /ex3-rollDie.test.js/i.
2022-10-24 12:42:12 info: ---------------------------------------
2022-10-24 12:42:12 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-10-24 12:42:12 info: ---------------------------------------
2022-10-24 12:42:18 info: All unit tests passed.
2022-10-24 12:42:26 info: All steps were completed successfully
2022-10-24 10:54:58 info: --------------------------------------------
2022-10-24 10:54:58 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-10-24 10:54:58 info: --------------------------------------------
2022-10-24 10:55:11 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (4 ms)
    √ should have all TODO comments removed (1 ms)
    × `rollDice` should not contain unneeded console.log calls (9 ms)
    √ should use `dice.map()` (1 ms)
    √ should use `Promise.all()` (1 ms)
    × should resolve when all dice settle successfully (20 ms)
    √ should reject with an Error when a die rolls off the table (94 ms)

  ● ex4-pokerDiceAll › `rollDice` should not contain unneeded console.log calls

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      137 |       });
      138 |
    > 139 |     expect(callsConsoleLog).toBe(false);
          |                             ^
      140 |   });
      141 | }
      142 |

      at Object.toBe (test-runner/unit-test-helpers.js:139:29)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      54 |     expect(promise).toBeInstanceOf(Promise);
      55 |     const result = await promise;
    > 56 |     expect(Array.isArray(result)).toBe(true);
         |                                   ^
      57 |     expect(result).toHaveLength(5);
      58 |
      59 |     promise.finally(() => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:56:35)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received three assertion calls.

      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {
    > 48 |     expect.assertions(4);
         |            ^
      49 |     expect(exported).toBeDefined();
      50 |
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 5 passed, 7 total
Snapshots:   0 total
Time:        3.623 s, estimated 5 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
2022-10-24 10:55:20 error: *** ESLint Report ***

ex4-pokerDiceAll.js
  30:7  warning  'promises' is never reassigned. Use 'const' instead          no-autofix/prefer-const
  32:8  warning  Results from `map` are unused. Replace `map` with `forEach`  no-restricted-syntax
  32:8  error    Results from `map` are unused. Replace `map` with `forEach`  hyf/use-map-result

✖ 3 problems (1 error, 2 warnings)


2022-10-24 10:56:30 info: --------------------------------------------
2022-10-24 10:56:30 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-10-24 10:56:30 info: --------------------------------------------
2022-10-24 10:56:44 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (12 ms)
    √ should have all TODO comments removed (3 ms)
    √ `rollDice` should not contain unneeded console.log calls (11 ms)
    √ should use `dice.map()` (1 ms)
    √ should use `Promise.all()` (4 ms)
    × should resolve when all dice settle successfully (75 ms)
    √ should reject with an Error when a die rolls off the table (91 ms)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      54 |     expect(promise).toBeInstanceOf(Promise);
      55 |     const result = await promise;
    > 56 |     expect(Array.isArray(result)).toBe(true);
         |                                   ^
      57 |     expect(result).toHaveLength(5);
      58 |
      59 |     promise.finally(() => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:56:35)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received three assertion calls.

      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {
    > 48 |     expect.assertions(4);
         |            ^
      49 |     expect(exported).toBeDefined();
      50 |
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        4.979 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
2022-10-24 10:56:55 error: *** ESLint Report ***

ex4-pokerDiceAll.js
  30:7  warning  'promises' is never reassigned. Use 'const' instead          no-autofix/prefer-const
  32:8  warning  Results from `map` are unused. Replace `map` with `forEach`  no-restricted-syntax
  32:8  error    Results from `map` are unused. Replace `map` with `forEach`  hyf/use-map-result

✖ 3 problems (1 error, 2 warnings)


2022-10-24 10:59:09 info: --------------------------------------------
2022-10-24 10:59:09 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-10-24 10:59:09 info: --------------------------------------------
2022-10-24 10:59:26 info: All unit tests passed.
2022-10-24 10:59:51 info: All steps were completed successfully
2022-10-24 11:04:38 info: --------------------------------------------
2022-10-24 11:04:38 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-10-24 11:04:38 info: --------------------------------------------
2022-10-24 11:04:47 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (3 ms)
    √ should have all TODO comments removed (1 ms)
    √ `rollDice` should not contain unneeded console.log calls (3 ms)
    √ should use `dice.map()` (1 ms)
    √ should use `Promise.all()`
    × should resolve when all dice settle successfully (3 ms)
    × should reject with an Error when a die rolls off the table (2 ms)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    TypeError: Promise resolver 1 is not a function
        at new Promise (<anonymous>)

      31 |   const dice = [1, 2, 3, 4, 5];
      32 |   dice.map((roll) => {
    > 33 |     promises.push(new Promise(roll));
         |                   ^
      34 |   });
      35 |   Promise.all(promises).then((response) => {
      36 |     response.forEach((roll) => {

      at 3-UsingAPIs/Week1/homework/ex4-pokerDiceAll.js:33:19
          at Array.map (<anonymous>)
      at map (3-UsingAPIs/Week1/homework/ex4-pokerDiceAll.js:32:8)
      at Object.rollDice (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:53:21)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received one assertion call.

      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {
    > 48 |     expect.assertions(4);
         |            ^
      49 |     expect(exported).toBeDefined();
      50 |
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:12)

  ● ex4-pokerDiceAll › should reject with an Error when a die rolls off the table

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      63 |
      64 |   test('should reject with an Error when a die rolls off the table', async () => {
    > 65 |     expect.assertions(3);
         |            ^
      66 |     expect(exported).toBeDefined();
      67 |
      68 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0.999);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:65:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 5 passed, 7 total
Snapshots:   0 total
Time:        2.564 s, estimated 5 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
2022-10-24 11:04:54 error: *** ESLint Report ***

ex4-pokerDiceAll.js
  32:8  warning  Results from `map` are unused. Replace `map` with `forEach`  no-restricted-syntax
  32:8  error    Results from `map` are unused. Replace `map` with `forEach`  hyf/use-map-result

✖ 2 problems (1 error, 1 warning)


2022-10-24 11:14:52 info: --------------------------------------------
2022-10-24 11:14:52 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-10-24 11:14:52 info: --------------------------------------------
2022-10-24 11:15:04 info: All unit tests passed.
2022-10-24 11:15:23 info: All steps were completed successfully
2022-10-24 11:26:43 info: ----------------------------------------------
2022-10-24 11:26:43 info: >>> Running Unit Test `ex5-pokerDiceChain` <<<
2022-10-24 11:26:43 info: ----------------------------------------------
2022-10-24 11:26:57 error: *** Unit Test Error Report ***

Command failed: npx jest ex5-pokerDiceChain.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex5-pokerDiceChain.test.js
  ex5-pokerDiceChain
    √ should exist and be executable (14 ms)
    √ should have all TODO comments removed (7 ms)
    √ `rollDice` should not contain unneeded console.log calls (21 ms)
    × should resolve when all dice settle successfully (90 ms)
    √ should reject with an Error when a die rolls off the table (89 ms)

  ● ex5-pokerDiceChain › should resolve when all dice settle successfully

    expect(received).toHaveLength(expected)

    Expected length: 5
    Received length: 2
    Received array:  ["NINE", "NINE"]

      33 |     const result = await promise;
      34 |     expect(Array.isArray(result)).toBe(true);
    > 35 |     expect(result).toHaveLength(5);
         |                    ^
      36 |
      37 |     promise.finally(() => {
      38 |       randomSpy.mockRestore();

      at Object.toHaveLength (3-UsingAPIs/Week1/unit-tests/ex5-pokerDiceChain.test.js:35:20)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 4 passed, 5 total
Snapshots:   0 total
Time:        4.139 s
Ran all test suites matching /ex5-pokerDiceChain.test.js/i.
2022-10-24 11:27:36 info: ----------------------------------------------
2022-10-24 11:27:36 info: >>> Running Unit Test `ex5-pokerDiceChain` <<<
2022-10-24 11:27:36 info: ----------------------------------------------
2022-10-24 11:27:46 error: *** Unit Test Error Report ***

Command failed: npx jest ex5-pokerDiceChain.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex5-pokerDiceChain.test.js
  ex5-pokerDiceChain
    √ should exist and be executable (4 ms)
    √ should have all TODO comments removed (1 ms)
    √ `rollDice` should not contain unneeded console.log calls (3 ms)
    × should resolve when all dice settle successfully (52 ms)
    √ should reject with an Error when a die rolls off the table (87 ms)

  ● ex5-pokerDiceChain › should resolve when all dice settle successfully

    expect(received).toHaveLength(expected)

    Expected length: 5
    Received length: 2
    Received array:  ["NINE", "NINE"]

      33 |     const result = await promise;
      34 |     expect(Array.isArray(result)).toBe(true);
    > 35 |     expect(result).toHaveLength(5);
         |                    ^
      36 |
      37 |     promise.finally(() => {
      38 |       randomSpy.mockRestore();

      at Object.toHaveLength (3-UsingAPIs/Week1/unit-tests/ex5-pokerDiceChain.test.js:35:20)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 4 passed, 5 total
Snapshots:   0 total
Time:        2.823 s, estimated 4 s
Ran all test suites matching /ex5-pokerDiceChain.test.js/i.
2022-10-24 11:32:20 info: ----------------------------------------------
2022-10-24 11:32:20 info: >>> Running Unit Test `ex5-pokerDiceChain` <<<
2022-10-24 11:32:20 info: ----------------------------------------------
2022-10-24 11:32:31 error: *** Unit Test Error Report ***

Command failed: npx jest ex5-pokerDiceChain.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex5-pokerDiceChain.test.js
  ex5-pokerDiceChain
    √ should exist and be executable (4 ms)
    × should have all TODO comments removed (5 ms)
    √ `rollDice` should not contain unneeded console.log calls (4 ms)
    √ should resolve when all dice settle successfully (135 ms)
    √ should reject with an Error when a die rolls off the table (94 ms)

  ● ex5-pokerDiceChain › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.toBeFalsy (test-runner/unit-test-helpers.js:105:42)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 4 passed, 5 total
Snapshots:   0 total
Time:        2.817 s, estimated 3 s
Ran all test suites matching /ex5-pokerDiceChain.test.js/i.
2022-10-24 11:33:03 info: ----------------------------------------------
2022-10-24 11:33:03 info: >>> Running Unit Test `ex5-pokerDiceChain` <<<
2022-10-24 11:33:03 info: ----------------------------------------------
2022-10-24 11:33:13 info: All unit tests passed.
2022-10-24 11:33:28 info: All steps were completed successfully
2022-10-24 11:39:53 info: --------------------------------------------
2022-10-24 11:39:53 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-10-24 11:39:53 info: --------------------------------------------
2022-10-24 11:40:06 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (9 ms)
    √ should have all TODO comments removed (2 ms)
    √ `rollDice` should not contain unneeded console.log calls (3 ms)
    √ should use `dice.map()` (6 ms)
    √ should use `Promise.all()` (1 ms)
    × should resolve when all dice settle successfully (11 ms)
    × should reject with an Error when a die rolls off the table (3 ms)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    TypeError: Promise resolver #<Promise> is not a function
        at new Promise (<anonymous>)

      30 |   const dice = [1, 2, 3, 4, 5];
      31 |   const promises = [];
    > 32 |   dice.map((roll) => promises.push(new Promise(rollDie(roll))));
         |                                    ^
      33 |   return Promise.all(promises);
      34 | }
      35 |

      at 3-UsingAPIs/Week1/homework/ex4-pokerDiceAll.js:32:36
          at Array.map (<anonymous>)
      at map (3-UsingAPIs/Week1/homework/ex4-pokerDiceAll.js:32:8)
      at Object.rollDice (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:53:21)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received one assertion call.

      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {
    > 48 |     expect.assertions(4);
         |            ^
      49 |     expect(exported).toBeDefined();
      50 |
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:12)

  ● ex4-pokerDiceAll › should reject with an Error when a die rolls off the table

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      63 |
      64 |   test('should reject with an Error when a die rolls off the table', async () => {
    > 65 |     expect.assertions(3);
         |            ^
      66 |     expect(exported).toBeDefined();
      67 |
      68 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0.999);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:65:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 5 passed, 7 total
Snapshots:   0 total
Time:        3.61 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
C:\Users\lenovo\Desktop\MyHYF\class40\Homework-class40\3-UsingAPIs\helpers\pokerDiceRoller.js:64
        reject(new Error(`Die ${die} rolled off the table.\n`));
               ^

Error: Die 1 rolled off the table.

    at rollOnce (C:\Users\lenovo\Desktop\MyHYF\class40\Homework-class40\3-UsingAPIs\helpers\pokerDiceRoller.js:64:16)
    at Timeout._onTimeout (C:\Users\lenovo\Desktop\MyHYF\class40\Homework-class40\3-UsingAPIs\helpers\pokerDiceRoller.js:77:26)
    at listOnTimeout (node:internal/timers:559:17)
    at processTimers (node:internal/timers:502:7)
2022-10-24 11:40:14 error: *** ESLint Report ***

ex4-pokerDiceAll.js
  32:8  warning  Results from `map` are unused. Replace `map` with `forEach`  no-restricted-syntax
  32:8  error    Results from `map` are unused. Replace `map` with `forEach`  hyf/use-map-result

✖ 2 problems (1 error, 1 warning)


2022-10-24 11:41:23 info: --------------------------------------------
2022-10-24 11:41:23 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-10-24 11:41:23 info: --------------------------------------------
2022-10-24 11:41:33 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    × should exist and be executable (9 ms)
    √ should have all TODO comments removed (2 ms)
    √ `rollDice` should not contain unneeded console.log calls (1 ms)
    × should use `dice.map()` (1 ms)
    × should use `Promise.all()` (4 ms)
    × should resolve when all dice settle successfully (1 ms)
    × should reject with an Error when a die rolls off the table (1 ms)

  ● ex4-pokerDiceAll › should exist and be executable

    expect(received).toBeDefined()

    Received: undefined

      30 |
      31 |   test('should exist and be executable', () => {
    > 32 |     expect(exported).toBeDefined();
         |                      ^
      33 |   });
      34 |
      35 |   testTodosRemoved(() => source);

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:32:22)

  ● ex4-pokerDiceAll › should use `dice.map()`

    expect(received).toBeDefined()

    Received: undefined

      38 |
      39 |   test('should use `dice.map()`', () => {
    > 40 |     expect(state.diceMap).toBeDefined();
         |                           ^
      41 |   });
      42 |
      43 |   test('should use `Promise.all()`', () => {

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:40:27)

  ● ex4-pokerDiceAll › should use `Promise.all()`

    expect(received).toBeDefined()

    Received: undefined

      42 |
      43 |   test('should use `Promise.all()`', () => {
    > 44 |     expect(state.promiseAll).toBeDefined();
         |                              ^
      45 |   });
      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:44:30)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect(received).toBeDefined()

    Received: undefined

      47 |   test('should resolve when all dice settle successfully', async () => {
      48 |     expect.assertions(4);
    > 49 |     expect(exported).toBeDefined();
         |                      ^
      50 |
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);
      52 |

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:49:22)

  ● ex4-pokerDiceAll › should resolve when all dice settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received one assertion call.

      46 |
      47 |   test('should resolve when all dice settle successfully', async () => {
    > 48 |     expect.assertions(4);
         |            ^
      49 |     expect(exported).toBeDefined();
      50 |
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:12)

  ● ex4-pokerDiceAll › should reject with an Error when a die rolls off the table

    expect(received).toBeDefined()

    Received: undefined

      64 |   test('should reject with an Error when a die rolls off the table', async () => {
      65 |     expect.assertions(3);
    > 66 |     expect(exported).toBeDefined();
         |                      ^
      67 |
      68 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0.999);
      69 |

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:66:22)

  ● ex4-pokerDiceAll › should reject with an Error when a die rolls off the table

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      63 |
      64 |   test('should reject with an Error when a die rolls off the table', async () => {
    > 65 |     expect.assertions(3);
         |            ^
      66 |     expect(exported).toBeDefined();
      67 |
      68 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0.999);

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:65:12)

Test Suites: 1 failed, 1 total
Tests:       5 failed, 2 passed, 7 total
Snapshots:   0 total
Time:        2.62 s, estimated 4 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
2022-10-24 11:41:41 error: *** ESLint Report ***

ex4-pokerDiceAll.js
  36:3  error  Parsing error: Unexpected token return

✖ 1 problem (1 error, 0 warnings)


2022-10-24 11:43:01 info: --------------------------------------------
2022-10-24 11:43:01 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-10-24 11:43:01 info: --------------------------------------------
2022-10-24 11:43:10 info: All unit tests passed.
2022-10-24 11:43:28 info: All steps were completed successfully
