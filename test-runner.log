2022-10-20 10:17:27 info: ---------------------------------------
2022-10-20 10:17:27 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-20 10:17:27 info: ---------------------------------------
2022-10-20 10:17:32 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
node:internal/process/promises:288
            triggerUncaughtException(err, true /* fromPromise */);
            ^

[UnhandledPromiseRejection: This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). The promise rejected with the reason "You didn't pass in a first name!".] {
  code: 'ERR_UNHANDLED_REJECTION'
}

Node.js v18.7.0
2022-10-20 10:19:08 info: ---------------------------------------
2022-10-20 10:19:08 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-20 10:19:08 info: ---------------------------------------
2022-10-20 10:19:10 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
node:internal/process/promises:288
            triggerUncaughtException(err, true /* fromPromise */);
            ^

[UnhandledPromiseRejection: This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). The promise rejected with the reason "You didn't pass in a first name!".] {
  code: 'ERR_UNHANDLED_REJECTION'
}

Node.js v18.7.0
2022-10-20 10:40:39 info: ---------------------------------------
2022-10-20 10:40:39 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-20 10:40:39 info: ---------------------------------------
2022-10-20 10:40:42 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
node:internal/process/promises:288
            triggerUncaughtException(err, true /* fromPromise */);
            ^

[UnhandledPromiseRejection: This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). The promise rejected with the reason "error => {
          console.log(error);
        }".] {
  code: 'ERR_UNHANDLED_REJECTION'
}

Node.js v18.7.0
2022-10-20 10:45:01 info: ---------------------------------------
2022-10-20 10:45:01 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-20 10:45:01 info: ---------------------------------------
2022-10-20 10:45:04 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed (1 ms)
    × `getAnonName` should not contain unneeded console.log calls (2 ms)
    √ should call `new Promise()`
    √ should take a single argument
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    × should resolve when called with a string argument (1 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › `getAnonName` should not contain unneeded console.log calls

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      137 |       });
      138 |
    > 139 |     expect(callsConsoleLog).toBe(false);
          |                             ^
      140 |   });
      141 | }
      142 |

      at Object.toBe (test-runner/unit-test-helpers.js:139:29)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 6 passed, 9 total
Snapshots:   0 total
Time:        0.766 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-20 10:48:41 info: ---------------------------------------
2022-10-20 10:48:41 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-20 10:48:41 info: ---------------------------------------
2022-10-20 10:48:44 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
node:internal/process/promises:288
            triggerUncaughtException(err, true /* fromPromise */);
            ^

[UnhandledPromiseRejection: This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). The promise rejected with the reason "You didn't pass in a first name!".] {
  code: 'ERR_UNHANDLED_REJECTION'
}

Node.js v18.7.0
2022-10-20 10:52:35 info: ---------------------------------------
2022-10-20 10:52:35 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-20 10:52:35 info: ---------------------------------------
2022-10-20 10:52:39 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed (1 ms)
    × `getAnonName` should not contain unneeded console.log calls (3 ms)
    √ should call `new Promise()`
    √ should take a single argument
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument
    × should resolve when called with a string argument (1 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › `getAnonName` should not contain unneeded console.log calls

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      137 |       });
      138 |
    > 139 |     expect(callsConsoleLog).toBe(false);
          |                             ^
      140 |   });
      141 | }
      142 |

      at Object.toBe (test-runner/unit-test-helpers.js:139:29)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 6 passed, 9 total
Snapshots:   0 total
Time:        0.813 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-20 10:54:59 info: ---------------------------------------
2022-10-20 10:54:59 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-20 10:54:59 info: ---------------------------------------
2022-10-20 10:55:02 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed (1 ms)
    × `getAnonName` should not contain unneeded console.log calls (3 ms)
    √ should call `new Promise()`
    √ should take a single argument
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    × should resolve when called with a string argument (1 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › `getAnonName` should not contain unneeded console.log calls

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      137 |       });
      138 |
    > 139 |     expect(callsConsoleLog).toBe(false);
          |                             ^
      140 |   });
      141 | }
      142 |

      at Object.toBe (test-runner/unit-test-helpers.js:139:29)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 6 passed, 9 total
Snapshots:   0 total
Time:        0.755 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-20 10:56:35 info: ---------------------------------------
2022-10-20 10:56:35 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-20 10:56:35 info: ---------------------------------------
2022-10-20 10:56:39 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed (1 ms)
    × `getAnonName` should not contain unneeded console.log calls (3 ms)
    √ should call `new Promise()` (1 ms)
    √ should take a single argument
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    × should resolve when called with a string argument (1 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › `getAnonName` should not contain unneeded console.log calls

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      137 |       });
      138 |
    > 139 |     expect(callsConsoleLog).toBe(false);
          |                             ^
      140 |   });
      141 | }
      142 |

      at Object.toBe (test-runner/unit-test-helpers.js:139:29)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 6 passed, 9 total
Snapshots:   0 total
Time:        0.826 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-20 10:58:34 info: ---------------------------------------
2022-10-20 10:58:34 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-20 10:58:34 info: ---------------------------------------
2022-10-20 10:58:37 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed (1 ms)
    × `getAnonName` should not contain unneeded console.log calls (3 ms)
    √ should call `new Promise()`
    √ should take a single argument
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument (1 ms)
    × should resolve when called with a string argument (1 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › `getAnonName` should not contain unneeded console.log calls

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      137 |       });
      138 |
    > 139 |     expect(callsConsoleLog).toBe(false);
          |                             ^
      140 |   });
      141 | }
      142 |

      at Object.toBe (test-runner/unit-test-helpers.js:139:29)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 6 passed, 9 total
Snapshots:   0 total
Time:        0.786 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-20 10:59:53 info: ---------------------------------------
2022-10-20 10:59:53 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-20 10:59:53 info: ---------------------------------------
2022-10-20 10:59:56 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed
    √ `getAnonName` should not contain unneeded console.log calls
    √ should call `new Promise()`
    √ should take a single argument
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument
    × should resolve when called with a string argument (2 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        0.737 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-20 11:02:07 info: ---------------------------------------
2022-10-20 11:02:07 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-20 11:02:07 info: ---------------------------------------
2022-10-20 11:02:11 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed
    √ `getAnonName` should not contain unneeded console.log calls
    √ should call `new Promise()`
    √ should take a single argument
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    × should resolve when called with a string argument (2 ms)
    × should reject with an Error object when called without an argument

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        0.782 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-20 11:02:59 info: ---------------------------------------
2022-10-20 11:02:59 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-20 11:02:59 info: ---------------------------------------
2022-10-20 11:03:03 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed
    √ `getAnonName` should not contain unneeded console.log calls
    √ should call `new Promise()` (1 ms)
    √ should take a single argument
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    × should resolve when called with a string argument (1 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        0.725 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-20 11:04:21 info: ---------------------------------------
2022-10-20 11:04:21 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-20 11:04:21 info: ---------------------------------------
2022-10-20 11:04:24 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed (1 ms)
    √ `getAnonName` should not contain unneeded console.log calls
    √ should call `new Promise()`
    √ should take a single argument
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    × should resolve when called with a string argument (2 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        0.75 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-20 11:11:14 info: ---------------------------------------
2022-10-20 11:11:14 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-20 11:11:14 info: ---------------------------------------
2022-10-20 11:11:18 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (1 ms)
    × should have all TODO comments removed (1 ms)
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    × should call `new Promise()`
    × should take a single argument (2 ms)
    × `resolve()` should be called with a one argument
    × `reject()` should be called with a one argument (1 ms)
    × should resolve when called with a string argument (1 ms)
    × should reject with an Error object when called without an argument

  ● getAnonName › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.toBeFalsy (test-runner/unit-test-helpers.js:105:42)

  ● getAnonName › should call `new Promise()`

    expect(received).toBeDefined()

    Received: undefined

      54 |
      55 |   test('should call `new Promise()`', () => {
    > 56 |     expect(state.newPromise).toBeDefined();
         |                              ^
      57 |   });
      58 |
      59 |   test('should take a single argument', () => {

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:56:30)

  ● getAnonName › should take a single argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 2

      58 |
      59 |   test('should take a single argument', () => {
    > 60 |     expect(state.paramCount).toBe(1);
         |                              ^
      61 |   });
      62 |
      63 |   test('`resolve()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:60:30)

  ● getAnonName › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      62 |
      63 |   test('`resolve()` should be called with a one argument', () => {
    > 64 |     expect(state.resolve).toBe(1);
         |                           ^
      65 |   });
      66 |
      67 |   test('`reject()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:64:27)

  ● getAnonName › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      66 |
      67 |   test('`reject()` should be called with a one argument', () => {
    > 68 |     expect(state.reject).toBe(1);
         |                          ^
      69 |   });
      70 |
      71 |   test('should resolve when called with a string argument', async () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:68:26)

  ● getAnonName › should resolve when called with a string argument

    TypeError: callback is not a function

      19 |     const fullName = `${firstName} Doe`;
      20 |
    > 21 |     callback(fullName);
         |     ^
      22 |   }, 1000);
      23 | };
      24 |

      at callback (3-UsingAPIs/Week1/homework/ex1-johnWho.js:21:5)
      at cb (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:76:35)
      at setTimeout (3-UsingAPIs/Week1/homework/ex1-johnWho.js:13:3)
      at Object.getAnonName (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:77:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    TypeError: callback is not a function

      13 |   setTimeout(() => {
      14 |     if (!firstName) {
    > 15 |       callback(new Error("You didn't pass in a first name!"));
         |       ^
      16 |       return;
      17 |     }
      18 |

      at callback (3-UsingAPIs/Week1/homework/ex1-johnWho.js:15:7)
      at cb (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:88:35)
      at setTimeout (3-UsingAPIs/Week1/homework/ex1-johnWho.js:13:3)
      at Object.getAnonName (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:89:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       7 failed, 2 passed, 9 total
Snapshots:   0 total
Time:        1.337 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-20 11:22:55 info: ---------------------------------------
2022-10-20 11:22:55 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-20 11:22:55 info: ---------------------------------------
2022-10-20 11:22:59 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (3 ms)
    √ should have all TODO comments removed (1 ms)
    √ `getAnonName` should not contain unneeded console.log calls (2 ms)
    √ should call `new Promise()`
    √ should take a single argument (1 ms)
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument (1 ms)
    × should resolve when called with a string argument (2 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should resolve when called with a string argument

    TypeError: getAnonName is not a function

      75 |       .spyOn(global, 'setTimeout')
      76 |       .mockImplementation((cb) => cb());
    > 77 |     const promise = getAnonName('John');
         |                     ^
      78 |     timeoutSpy.mockRestore();
      79 |     expect(promise).toBeInstanceOf(Promise);
      80 |     return expect(promise).resolves.toEqual('John Doe');

      at Object.getAnonName (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:77:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    TypeError: getAnonName is not a function

      87 |       .spyOn(global, 'setTimeout')
      88 |       .mockImplementation((cb) => cb());
    > 89 |     const promise = getAnonName();
         |                     ^
      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.getAnonName (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:89:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        1.199 s, estimated 2 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-20 11:23:02 error: *** ESLint Report ***

ex1-johnWho.js
  19:7  error  'getAnonName' is assigned a value but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2022-10-20 11:23:06 error: *** Spell Checker Report ***

ex1-johnWho.js:27:16 - Unknown word (jhon)

2022-10-20 11:30:21 info: ---------------------------------------
2022-10-20 11:30:21 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-20 11:30:21 info: ---------------------------------------
2022-10-20 11:30:25 error: *** Unit Test Error Report ***

console.error
    Error: You didn't pass in a first name!
        at C:\Users\utente\Desktop\hyf-homework\Homework-class40\3-UsingAPIs\Week1\homework\ex1-johnWho.js:18:14
        at new Promise (<anonymous>)
        at getAnonName (C:\Users\utente\Desktop\hyf-homework\Homework-class40\3-UsingAPIs\Week1\homework\ex1-johnWho.js:16:3)
        at Object.getAnonName (C:\Users\utente\Desktop\hyf-homework\Homework-class40\3-UsingAPIs\Week1\unit-tests\ex1-johnWho.test.js:89:21)
        at Promise.then.completed (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\utils.js:333:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\utils.js:259:10)
        at _callCircusTest (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\run.js:277:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\run.js:209:3)
        at _runTestsForDescribeBlock (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\run.js:97:9)
        at _runTestsForDescribeBlock (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\run.js:91:9)
        at run (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\run.js:31:3)
        at runAndTransformResultsToJestFormat (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\legacy-code-todo-rewrite\jestAdapterInit.js:136:21)
        at jestAdapter (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\legacy-code-todo-rewrite\jestAdapter.js:92:19)
        at runTestInternal (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-runner\build\runTest.js:407:16)
        at runTest (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-runner\build\runTest.js:491:34)

      26 |       return val;
      27 |     })
    > 28 |     .catch((error) => console.error(error));
         |                               ^
      29 | };
      30 |
      31 | function main() {

      at error (3-UsingAPIs/Week1/homework/ex1-johnWho.js:28:31)



Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed (1 ms)
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    √ should call `new Promise()`
    √ should take a single argument
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument (1 ms)
    × should resolve when called with a string argument (3 ms)
    × should reject with an Error object when called without an argument (36 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        1.189 s, estimated 2 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-20 11:30:27 error: *** ESLint Report ***

ex1-johnWho.js
  3:9  error  'full' is assigned a value but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2022-10-20 11:31:01 info: ---------------------------------------
2022-10-20 11:31:01 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-20 11:31:01 info: ---------------------------------------
2022-10-20 11:31:05 error: *** Unit Test Error Report ***

console.error
    Error: You didn't pass in a first name!
        at C:\Users\utente\Desktop\hyf-homework\Homework-class40\3-UsingAPIs\Week1\homework\ex1-johnWho.js:16:14
        at new Promise (<anonymous>)
        at getAnonName (C:\Users\utente\Desktop\hyf-homework\Homework-class40\3-UsingAPIs\Week1\homework\ex1-johnWho.js:14:3)
        at Object.getAnonName (C:\Users\utente\Desktop\hyf-homework\Homework-class40\3-UsingAPIs\Week1\unit-tests\ex1-johnWho.test.js:89:21)
        at Promise.then.completed (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\utils.js:333:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\utils.js:259:10)
        at _callCircusTest (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\run.js:277:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\run.js:209:3)
        at _runTestsForDescribeBlock (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\run.js:97:9)
        at _runTestsForDescribeBlock (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\run.js:91:9)
        at run (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\run.js:31:3)
        at runAndTransformResultsToJestFormat (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\legacy-code-todo-rewrite\jestAdapterInit.js:136:21)
        at jestAdapter (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\legacy-code-todo-rewrite\jestAdapter.js:92:19)
        at runTestInternal (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-runner\build\runTest.js:407:16)
        at runTest (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-runner\build\runTest.js:491:34)

      24 |       return val;
      25 |     })
    > 26 |     .catch((error) => console.error(error));
         |                               ^
      27 | };
      28 |
      29 | function main() {

      at error (3-UsingAPIs/Week1/homework/ex1-johnWho.js:26:31)



Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed
    √ `getAnonName` should not contain unneeded console.log calls
    √ should call `new Promise()`
    √ should take a single argument (1 ms)
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    × should resolve when called with a string argument (3 ms)
    × should reject with an Error object when called without an argument (30 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        1.164 s, estimated 2 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-20 11:31:39 info: ---------------------------------------
2022-10-20 11:31:39 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-20 11:31:39 info: ---------------------------------------
2022-10-20 11:31:43 error: *** Unit Test Error Report ***

console.error
    Error: You didn't pass in a first name!
        at C:\Users\utente\Desktop\hyf-homework\Homework-class40\3-UsingAPIs\Week1\homework\ex1-johnWho.js:16:14
        at new Promise (<anonymous>)
        at getAnonName (C:\Users\utente\Desktop\hyf-homework\Homework-class40\3-UsingAPIs\Week1\homework\ex1-johnWho.js:14:3)
        at Object.getAnonName (C:\Users\utente\Desktop\hyf-homework\Homework-class40\3-UsingAPIs\Week1\unit-tests\ex1-johnWho.test.js:89:21)
        at Promise.then.completed (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\utils.js:333:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\utils.js:259:10)
        at _callCircusTest (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\run.js:277:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\run.js:209:3)
        at _runTestsForDescribeBlock (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\run.js:97:9)
        at _runTestsForDescribeBlock (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\run.js:91:9)
        at run (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\run.js:31:3)
        at runAndTransformResultsToJestFormat (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\legacy-code-todo-rewrite\jestAdapterInit.js:136:21)
        at jestAdapter (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\legacy-code-todo-rewrite\jestAdapter.js:92:19)
        at runTestInternal (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-runner\build\runTest.js:407:16)
        at runTest (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-runner\build\runTest.js:491:34)

      24 |       return val;
      25 |     })
    > 26 |     .catch((error) => console.error(error));
         |                               ^
      27 | };
      28 | getAnonName('John');
      29 |

      at error (3-UsingAPIs/Week1/homework/ex1-johnWho.js:26:31)



Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (3 ms)
    √ should have all TODO comments removed (1 ms)
    √ `getAnonName` should not contain unneeded console.log calls (2 ms)
    √ should call `new Promise()`
    √ should take a single argument (1 ms)
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    × should resolve when called with a string argument (2 ms)
    × should reject with an Error object when called without an argument (43 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        1.178 s, estimated 2 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-20 11:33:07 info: ---------------------------------------
2022-10-20 11:33:07 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-20 11:33:07 info: ---------------------------------------
2022-10-20 11:33:11 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed (1 ms)
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    √ should call `new Promise()` (1 ms)
    √ should take a single argument (1 ms)
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument (1 ms)
    × should resolve when called with a string argument (5 ms)
    × should reject with an Error object when called without an argument (2 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        1.163 s, estimated 2 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-20 11:49:56 info: ---------------------------------------
2022-10-20 11:49:56 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-20 11:49:56 info: ---------------------------------------
2022-10-20 11:50:00 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
C:\Users\utente\Desktop\hyf-homework\Homework-class40\3-UsingAPIs\Week1\homework\ex1-johnWho.js:18
      reject(new Error("You didn't pass in a first name!"));
             ^

Error: You didn't pass in a first name!
    at C:\Users\utente\Desktop\hyf-homework\Homework-class40\3-UsingAPIs\Week1\homework\ex1-johnWho.js:18:14
    at new Promise (<anonymous>)
    at getAnonName (C:\Users\utente\Desktop\hyf-homework\Homework-class40\3-UsingAPIs\Week1\homework\ex1-johnWho.js:14:3)
    at Object.getAnonName (C:\Users\utente\Desktop\hyf-homework\Homework-class40\3-UsingAPIs\Week1\unit-tests\ex1-johnWho.test.js:89:21)
    at Promise.then.completed (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\utils.js:333:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\utils.js:259:10)
    at _callCircusTest (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\run.js:277:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\run.js:209:3)
    at _runTestsForDescribeBlock (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\run.js:97:9)
    at _runTestsForDescribeBlock (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\run.js:91:9)
    at run (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\run.js:31:3)
    at runAndTransformResultsToJestFormat (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\legacy-code-todo-rewrite\jestAdapterInit.js:136:21)
    at jestAdapter (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-circus\build\legacy-code-todo-rewrite\jestAdapter.js:92:19)
    at runTestInternal (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-runner\build\runTest.js:407:16)
    at runTest (C:\Users\utente\Desktop\hyf-homework\Homework-class40\node_modules\jest-runner\build\runTest.js:491:34)

Node.js v18.7.0
2022-10-20 11:52:01 info: ---------------------------------------
2022-10-20 11:52:01 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-20 11:52:01 info: ---------------------------------------
2022-10-20 11:52:05 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (3 ms)
    × should have all TODO comments removed (3 ms)
    √ `getAnonName` should not contain unneeded console.log calls
    √ should call `new Promise()`
    √ should take a single argument (1 ms)
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    × should resolve when called with a string argument (1 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.toBeFalsy (test-runner/unit-test-helpers.js:105:42)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 6 passed, 9 total
Snapshots:   0 total
Time:        1.199 s, estimated 2 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-20 11:55:19 info: ---------------------------------------
2022-10-20 11:55:19 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-20 11:55:19 info: ---------------------------------------
2022-10-20 11:55:23 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    √ should call `new Promise()`
    √ should take a single argument
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument (1 ms)
    × should resolve when called with a string argument (1 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        0.996 s, estimated 2 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-20 11:56:50 info: ---------------------------------------
2022-10-20 11:56:50 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-20 11:56:50 info: ---------------------------------------
2022-10-20 11:56:54 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed (1 ms)
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    √ should call `new Promise()`
    √ should take a single argument
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument (1 ms)
    × should resolve when called with a string argument (3 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        1.109 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-20 11:58:55 info: ---------------------------------------
2022-10-20 11:58:55 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-20 11:58:55 info: ---------------------------------------
2022-10-20 11:58:59 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed (1 ms)
    √ `getAnonName` should not contain unneeded console.log calls
    √ should call `new Promise()`
    √ should take a single argument
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    × should resolve when called with a string argument (2 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        1.166 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-21 12:01:03 info: ---------------------------------------
2022-10-21 12:01:03 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-21 12:01:03 info: ---------------------------------------
2022-10-21 12:01:06 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed (1 ms)
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    √ should call `new Promise()`
    √ should take a single argument
    √ `resolve()` should be called with a one argument
    × `reject()` should be called with a one argument (5 ms)
    × should resolve when called with a string argument (2 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

      66 |
      67 |   test('`reject()` should be called with a one argument', () => {
    > 68 |     expect(state.reject).toBe(1);
         |                          ^
      69 |   });
      70 |
      71 |   test('should resolve when called with a string argument', async () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:68:26)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 6 passed, 9 total
Snapshots:   0 total
Time:        1.194 s, estimated 2 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-21 12:03:37 info: ---------------------------------------
2022-10-21 12:03:37 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-21 12:03:37 info: ---------------------------------------
2022-10-21 12:03:41 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (3 ms)
    √ should have all TODO comments removed (1 ms)
    √ `getAnonName` should not contain unneeded console.log calls (2 ms)
    √ should call `new Promise()` (1 ms)
    √ should take a single argument (1 ms)
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument (1 ms)
    × should resolve when called with a string argument (3 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        1.184 s, estimated 2 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-21 12:03:44 error: *** ESLint Report ***

ex1-johnWho.js
  3:9  error  'reject' is assigned a value but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2022-10-21 12:04:32 info: ---------------------------------------
2022-10-21 12:04:32 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-21 12:04:32 info: ---------------------------------------
2022-10-21 12:04:36 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (3 ms)
    √ should have all TODO comments removed
    √ `getAnonName` should not contain unneeded console.log calls (2 ms)
    √ should call `new Promise()` (1 ms)
    √ should take a single argument (1 ms)
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument (1 ms)
    × should resolve when called with a string argument (5 ms)
    × should reject with an Error object when called without an argument (2 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        1.195 s, estimated 2 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-21 12:04:38 error: *** ESLint Report ***

ex1-johnWho.js
  3:9  error  'reject' is assigned a value but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2022-10-21 12:05:38 info: ---------------------------------------
2022-10-21 12:05:39 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-21 12:05:39 info: ---------------------------------------
2022-10-21 12:05:42 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    × should exist and be executable (4 ms)
    √ should have all TODO comments removed (1 ms)
    √ `getAnonName` should not contain unneeded console.log calls
    × should call `new Promise()`
    × should take a single argument (2 ms)
    × `resolve()` should be called with a one argument
    × `reject()` should be called with a one argument (1 ms)
    × should resolve when called with a string argument (1 ms)
    × should reject with an Error object when called without an argument

  ● getAnonName › should exist and be executable

    expect(received).toBeDefined()

    Received: undefined

      46 |
      47 |   test('should exist and be executable', () => {
    > 48 |     expect(exported).toBeDefined();
         |                      ^
      49 |   });
      50 |
      51 |   testTodosRemoved(() => source);

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:48:22)

  ● getAnonName › should call `new Promise()`

    expect(received).toBeDefined()

    Received: undefined

      54 |
      55 |   test('should call `new Promise()`', () => {
    > 56 |     expect(state.newPromise).toBeDefined();
         |                              ^
      57 |   });
      58 |
      59 |   test('should take a single argument', () => {

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:56:30)

  ● getAnonName › should take a single argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

      58 |
      59 |   test('should take a single argument', () => {
    > 60 |     expect(state.paramCount).toBe(1);
         |                              ^
      61 |   });
      62 |
      63 |   test('`resolve()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:60:30)

  ● getAnonName › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      62 |
      63 |   test('`resolve()` should be called with a one argument', () => {
    > 64 |     expect(state.resolve).toBe(1);
         |                           ^
      65 |   });
      66 |
      67 |   test('`reject()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:64:27)

  ● getAnonName › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      66 |
      67 |   test('`reject()` should be called with a one argument', () => {
    > 68 |     expect(state.reject).toBe(1);
         |                          ^
      69 |   });
      70 |
      71 |   test('should resolve when called with a string argument', async () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:68:26)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeDefined()

    Received: undefined

      71 |   test('should resolve when called with a string argument', async () => {
      72 |     expect.assertions(3);
    > 73 |     expect(exported).toBeDefined();
         |                      ^
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')
      76 |       .mockImplementation((cb) => cb());

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:73:22)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeDefined()

    Received: undefined

      83 |   test('should reject with an Error object when called without an argument', async () => {
      84 |     expect.assertions(3);
    > 85 |     expect(exported).toBeDefined();
         |                      ^
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')
      88 |       .mockImplementation((cb) => cb());

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:85:22)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       7 failed, 2 passed, 9 total
Snapshots:   0 total
Time:        1.127 s, estimated 2 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-21 12:05:45 error: *** ESLint Report ***

ex1-johnWho.js
  3:1  error  Parsing error: 'import' and 'export' may appear only with 'sourceType: module'

✖ 1 problem (1 error, 0 warnings)


2022-10-21 12:06:45 info: ---------------------------------------
2022-10-21 12:06:45 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-21 12:06:45 info: ---------------------------------------
2022-10-21 12:06:49 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    × should exist and be executable (2 ms)
    √ should have all TODO comments removed (1 ms)
    √ `getAnonName` should not contain unneeded console.log calls (2 ms)
    × should call `new Promise()` (1 ms)
    × should take a single argument (3 ms)
    × `resolve()` should be called with a one argument (1 ms)
    × `reject()` should be called with a one argument (1 ms)
    × should resolve when called with a string argument (1 ms)
    × should reject with an Error object when called without an argument

  ● getAnonName › should exist and be executable

    expect(received).toBeDefined()

    Received: undefined

      46 |
      47 |   test('should exist and be executable', () => {
    > 48 |     expect(exported).toBeDefined();
         |                      ^
      49 |   });
      50 |
      51 |   testTodosRemoved(() => source);

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:48:22)

  ● getAnonName › should call `new Promise()`

    expect(received).toBeDefined()

    Received: undefined

      54 |
      55 |   test('should call `new Promise()`', () => {
    > 56 |     expect(state.newPromise).toBeDefined();
         |                              ^
      57 |   });
      58 |
      59 |   test('should take a single argument', () => {

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:56:30)

  ● getAnonName › should take a single argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

      58 |
      59 |   test('should take a single argument', () => {
    > 60 |     expect(state.paramCount).toBe(1);
         |                              ^
      61 |   });
      62 |
      63 |   test('`resolve()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:60:30)

  ● getAnonName › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      62 |
      63 |   test('`resolve()` should be called with a one argument', () => {
    > 64 |     expect(state.resolve).toBe(1);
         |                           ^
      65 |   });
      66 |
      67 |   test('`reject()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:64:27)

  ● getAnonName › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      66 |
      67 |   test('`reject()` should be called with a one argument', () => {
    > 68 |     expect(state.reject).toBe(1);
         |                          ^
      69 |   });
      70 |
      71 |   test('should resolve when called with a string argument', async () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:68:26)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeDefined()

    Received: undefined

      71 |   test('should resolve when called with a string argument', async () => {
      72 |     expect.assertions(3);
    > 73 |     expect(exported).toBeDefined();
         |                      ^
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')
      76 |       .mockImplementation((cb) => cb());

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:73:22)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeDefined()

    Received: undefined

      83 |   test('should reject with an Error object when called without an argument', async () => {
      84 |     expect.assertions(3);
    > 85 |     expect(exported).toBeDefined();
         |                      ^
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')
      88 |       .mockImplementation((cb) => cb());

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:85:22)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       7 failed, 2 passed, 9 total
Snapshots:   0 total
Time:        1.06 s, estimated 2 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-21 12:06:51 error: *** ESLint Report ***

ex1-johnWho.js
  35:1  error  Parsing error: 'import' and 'export' may appear only with 'sourceType: module'

✖ 1 problem (1 error, 0 warnings)


2022-10-21 12:07:48 info: ---------------------------------------
2022-10-21 12:07:48 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-21 12:07:48 info: ---------------------------------------
2022-10-21 12:07:52 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    × should exist and be executable (3 ms)
    √ should have all TODO comments removed (1 ms)
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    × should call `new Promise()` (1 ms)
    × should take a single argument (5 ms)
    × `resolve()` should be called with a one argument (1 ms)
    × `reject()` should be called with a one argument (1 ms)
    × should resolve when called with a string argument (1 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should exist and be executable

    expect(received).toBeDefined()

    Received: undefined

      46 |
      47 |   test('should exist and be executable', () => {
    > 48 |     expect(exported).toBeDefined();
         |                      ^
      49 |   });
      50 |
      51 |   testTodosRemoved(() => source);

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:48:22)

  ● getAnonName › should call `new Promise()`

    expect(received).toBeDefined()

    Received: undefined

      54 |
      55 |   test('should call `new Promise()`', () => {
    > 56 |     expect(state.newPromise).toBeDefined();
         |                              ^
      57 |   });
      58 |
      59 |   test('should take a single argument', () => {

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:56:30)

  ● getAnonName › should take a single argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

      58 |
      59 |   test('should take a single argument', () => {
    > 60 |     expect(state.paramCount).toBe(1);
         |                              ^
      61 |   });
      62 |
      63 |   test('`resolve()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:60:30)

  ● getAnonName › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      62 |
      63 |   test('`resolve()` should be called with a one argument', () => {
    > 64 |     expect(state.resolve).toBe(1);
         |                           ^
      65 |   });
      66 |
      67 |   test('`reject()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:64:27)

  ● getAnonName › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      66 |
      67 |   test('`reject()` should be called with a one argument', () => {
    > 68 |     expect(state.reject).toBe(1);
         |                          ^
      69 |   });
      70 |
      71 |   test('should resolve when called with a string argument', async () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:68:26)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeDefined()

    Received: undefined

      71 |   test('should resolve when called with a string argument', async () => {
      72 |     expect.assertions(3);
    > 73 |     expect(exported).toBeDefined();
         |                      ^
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')
      76 |       .mockImplementation((cb) => cb());

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:73:22)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeDefined()

    Received: undefined

      83 |   test('should reject with an Error object when called without an argument', async () => {
      84 |     expect.assertions(3);
    > 85 |     expect(exported).toBeDefined();
         |                      ^
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')
      88 |       .mockImplementation((cb) => cb());

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:85:22)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       7 failed, 2 passed, 9 total
Snapshots:   0 total
Time:        1.263 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-21 12:07:54 error: *** ESLint Report ***

ex1-johnWho.js
  35:1  error  Parsing error: 'import' and 'export' may appear only with 'sourceType: module'

✖ 1 problem (1 error, 0 warnings)


2022-10-21 12:11:06 info: ---------------------------------------
2022-10-21 12:11:06 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-21 12:11:06 info: ---------------------------------------
2022-10-21 12:11:10 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed
    √ `getAnonName` should not contain unneeded console.log calls
    √ should call `new Promise()`
    √ should take a single argument (1 ms)
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument (1 ms)
    × should resolve when called with a string argument (3 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        1.195 s, estimated 2 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-21 12:13:50 info: ---------------------------------------
2022-10-21 12:13:50 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-21 12:13:50 info: ---------------------------------------
2022-10-21 12:13:54 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (3 ms)
    √ should have all TODO comments removed (1 ms)
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    √ should call `new Promise()`
    √ should take a single argument
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument (1 ms)
    × should resolve when called with a string argument (5 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        1.272 s, estimated 2 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-21 12:15:00 info: ---------------------------------------
2022-10-21 12:15:00 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-21 12:15:00 info: ---------------------------------------
2022-10-21 12:15:05 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (3 ms)
    √ should have all TODO comments removed (1 ms)
    √ `getAnonName` should not contain unneeded console.log calls (2 ms)
    √ should call `new Promise()`
    √ should take a single argument (1 ms)
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument (1 ms)
    × should resolve when called with a string argument (4 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        1.845 s, estimated 2 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-21 12:15:46 info: ---------------------------------------
2022-10-21 12:15:46 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-21 12:15:46 info: ---------------------------------------
2022-10-21 12:15:49 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed
    √ `getAnonName` should not contain unneeded console.log calls
    √ should call `new Promise()`
    √ should take a single argument
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    × should resolve when called with a string argument (2 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        0.679 s, estimated 2 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-21 12:40:20 info: ---------------------------------------
2022-10-21 12:40:20 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-21 12:40:20 info: ---------------------------------------
2022-10-21 12:40:24 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed (1 ms)
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    √ should call `new Promise()`
    √ should take a single argument
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    × should resolve when called with a string argument (3 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).resolves.toEqual(expected) // deep equality

    Expected: "John Doe"
    Received: "JohnDoe"

      78 |     timeoutSpy.mockRestore();
      79 |     expect(promise).toBeInstanceOf(Promise);
    > 80 |     return expect(promise).resolves.toEqual('John Doe');
         |                                     ^
      81 |   });
      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {

      at Object.toEqual (node_modules/expect/build/index.js:194:22)
      at Object.toEqual (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:80:37)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "undefinedDoe"

      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
    > 92 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      93 |   });
      94 | });
      95 |

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:92:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        0.965 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-21 12:42:02 info: ---------------------------------------
2022-10-21 12:42:02 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-21 12:42:02 info: ---------------------------------------
2022-10-21 12:42:06 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed (1 ms)
    × `getAnonName` should not contain unneeded console.log calls (5 ms)
    √ should call `new Promise()` (1 ms)
    √ should take a single argument
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument (1 ms)
    × should resolve when called with a string argument (2 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › `getAnonName` should not contain unneeded console.log calls

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      137 |       });
      138 |
    > 139 |     expect(callsConsoleLog).toBe(false);
          |                             ^
      140 |   });
      141 | }
      142 |

      at Object.toBe (test-runner/unit-test-helpers.js:139:29)

  ● getAnonName › should resolve when called with a string argument

    expect(received).resolves.toEqual(expected) // deep equality

    Expected: "John Doe"
    Received: undefined

      78 |     timeoutSpy.mockRestore();
      79 |     expect(promise).toBeInstanceOf(Promise);
    > 80 |     return expect(promise).resolves.toEqual('John Doe');
         |                                     ^
      81 |   });
      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {

      at Object.toEqual (node_modules/expect/build/index.js:194:22)
      at Object.toEqual (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:80:37)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: undefined

      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
    > 92 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      93 |   });
      94 | });
      95 |

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:92:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 6 passed, 9 total
Snapshots:   0 total
Time:        0.892 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-21 12:56:56 info: ---------------------------------------
2022-10-21 12:56:56 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-21 12:56:56 info: ---------------------------------------
2022-10-21 12:57:00 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed
    × `getAnonName` should not contain unneeded console.log calls (2 ms)
    √ should call `new Promise()` (1 ms)
    √ should take a single argument
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument
    × should resolve when called with a string argument (2 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › `getAnonName` should not contain unneeded console.log calls

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      137 |       });
      138 |
    > 139 |     expect(callsConsoleLog).toBe(false);
          |                             ^
      140 |   });
      141 | }
      142 |

      at Object.toBe (test-runner/unit-test-helpers.js:139:29)

  ● getAnonName › should resolve when called with a string argument

    expect(received).resolves.toEqual(expected) // deep equality

    Expected: "John Doe"
    Received: undefined

      78 |     timeoutSpy.mockRestore();
      79 |     expect(promise).toBeInstanceOf(Promise);
    > 80 |     return expect(promise).resolves.toEqual('John Doe');
         |                                     ^
      81 |   });
      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {

      at Object.toEqual (node_modules/expect/build/index.js:194:22)
      at Object.toEqual (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:80:37)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: undefined

      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
    > 92 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      93 |   });
      94 | });
      95 |

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:92:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 6 passed, 9 total
Snapshots:   0 total
Time:        0.951 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-21 12:59:28 info: ---------------------------------------
2022-10-21 12:59:28 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-21 12:59:28 info: ---------------------------------------
2022-10-21 12:59:31 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    √ should call `new Promise()` (1 ms)
    √ should take a single argument
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    × should resolve when called with a string argument (3 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      77 |     const promise = getAnonName('John');
      78 |     timeoutSpy.mockRestore();
    > 79 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      80 |     return expect(promise).resolves.toEqual('John Doe');
      81 |   });
      82 |

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:79:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      89 |     const promise = getAnonName();
      90 |     timeoutSpy.mockRestore();
    > 91 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);
      93 |   });
      94 | });

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:91:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        0.723 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-21 01:43:47 info: ---------------------------------------
2022-10-21 01:43:47 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-21 01:43:47 info: ---------------------------------------
2022-10-21 01:43:50 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed
    √ `getAnonName` should not contain unneeded console.log calls
    √ should call `new Promise()` (1 ms)
    √ should take a single argument
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    × should resolve when called with a string argument (3 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).resolves.toEqual(expected) // deep equality

    Expected: "John Doe"
    Received: "John"

      78 |     timeoutSpy.mockRestore();
      79 |     expect(promise).toBeInstanceOf(Promise);
    > 80 |     return expect(promise).resolves.toEqual('John Doe');
         |                                     ^
      81 |   });
      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {

      at Object.toEqual (node_modules/expect/build/index.js:194:22)
      at Object.toEqual (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:80:37)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: [Error: You didn't pass in a first name!]

      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
    > 92 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      93 |   });
      94 | });
      95 |

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:92:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        0.735 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-21 01:44:37 info: ---------------------------------------
2022-10-21 01:44:37 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-21 01:44:37 info: ---------------------------------------
2022-10-21 01:44:40 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed (1 ms)
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    √ should call `new Promise()`
    √ should take a single argument
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    × should resolve when called with a string argument (3 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).resolves.toEqual(expected) // deep equality

    Expected: "John Doe"
    Received: "John"

      78 |     timeoutSpy.mockRestore();
      79 |     expect(promise).toBeInstanceOf(Promise);
    > 80 |     return expect(promise).resolves.toEqual('John Doe');
         |                                     ^
      81 |   });
      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {

      at Object.toEqual (node_modules/expect/build/index.js:194:22)
      at Object.toEqual (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:80:37)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: [Error: You didn't pass in a first name!]

      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
    > 92 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      93 |   });
      94 | });
      95 |

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:92:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        0.66 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-21 01:47:50 info: ---------------------------------------
2022-10-21 01:47:50 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-21 01:47:50 info: ---------------------------------------
2022-10-21 01:47:52 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed (1 ms)
    √ `getAnonName` should not contain unneeded console.log calls
    √ should call `new Promise()`
    √ should take a single argument
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument
    × should resolve when called with a string argument (5 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).resolves.toEqual(expected) // deep equality

    Expected: "John Doe"
    Received: "John"

      78 |     timeoutSpy.mockRestore();
      79 |     expect(promise).toBeInstanceOf(Promise);
    > 80 |     return expect(promise).resolves.toEqual('John Doe');
         |                                     ^
      81 |   });
      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {

      at Object.toEqual (node_modules/expect/build/index.js:194:22)
      at Object.toEqual (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:80:37)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: [Error: You didn't pass in a first name!]

      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
    > 92 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      93 |   });
      94 | });
      95 |

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:92:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        0.569 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-10-21 01:49:34 info: ---------------------------------------
2022-10-21 01:49:34 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-21 01:49:34 info: ---------------------------------------
2022-10-21 01:49:39 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Debugger attached.
Debugger attached.
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed (1 ms)
    √ `getAnonName` should not contain unneeded console.log calls (5 ms)
    √ should call `new Promise()` (1 ms)
    √ should take a single argument
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    × should resolve when called with a string argument (4 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).resolves.toEqual(expected) // deep equality

    Expected: "John Doe"
    Received: "John"

      78 |     timeoutSpy.mockRestore();
      79 |     expect(promise).toBeInstanceOf(Promise);
    > 80 |     return expect(promise).resolves.toEqual('John Doe');
         |                                     ^
      81 |   });
      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {

      at Object.toEqual (node_modules/expect/build/index.js:194:22)
      at Object.toEqual (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:80:37)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: [Error: You didn't pass in a first name!]

      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
    > 92 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      93 |   });
      94 | });
      95 |

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:92:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        1.004 s
Ran all test suites matching /ex1-johnWho.test.js/i.
Waiting for the debugger to disconnect...
Waiting for the debugger to disconnect...
2022-10-21 01:50:57 info: ---------------------------------------
2022-10-21 01:50:57 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-21 01:50:57 info: ---------------------------------------
2022-10-21 01:51:03 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Debugger attached.
Debugger attached.
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    √ should call `new Promise()` (1 ms)
    √ should take a single argument (1 ms)
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    × should resolve when called with a string argument (4 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).resolves.toEqual(expected) // deep equality

    Expected: "John Doe"
    Received: "JohnDoe"

      78 |     timeoutSpy.mockRestore();
      79 |     expect(promise).toBeInstanceOf(Promise);
    > 80 |     return expect(promise).resolves.toEqual('John Doe');
         |                                     ^
      81 |   });
      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {

      at Object.toEqual (node_modules/expect/build/index.js:194:22)
      at Object.toEqual (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:80:37)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: [Error: You didn't pass in a first name!]

      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
    > 92 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      93 |   });
      94 | });
      95 |

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:92:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        1.105 s
Ran all test suites matching /ex1-johnWho.test.js/i.
Waiting for the debugger to disconnect...
Waiting for the debugger to disconnect...
2022-10-21 01:51:56 info: ---------------------------------------
2022-10-21 01:51:56 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-21 01:51:56 info: ---------------------------------------
2022-10-21 01:52:01 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Debugger attached.
Debugger attached.
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed (1 ms)
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    √ should call `new Promise()`
    √ should take a single argument
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument (1 ms)
    × should resolve when called with a string argument (3 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should resolve when called with a string argument

    expect(received).resolves.toEqual(expected) // deep equality

    Expected: "John Doe"
    Received: "JohnDoe"

      78 |     timeoutSpy.mockRestore();
      79 |     expect(promise).toBeInstanceOf(Promise);
    > 80 |     return expect(promise).resolves.toEqual('John Doe');
         |                                     ^
      81 |   });
      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {

      at Object.toEqual (node_modules/expect/build/index.js:194:22)
      at Object.toEqual (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:80:37)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: [Error: You didn't pass in a first name!]

      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
    > 92 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      93 |   });
      94 | });
      95 |

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:92:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 7 passed, 9 total
Snapshots:   0 total
Time:        1.111 s
Ran all test suites matching /ex1-johnWho.test.js/i.
Waiting for the debugger to disconnect...
Waiting for the debugger to disconnect...
2022-10-21 01:53:32 info: ---------------------------------------
2022-10-21 01:53:32 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-21 01:53:32 info: ---------------------------------------
2022-10-21 01:53:37 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Debugger attached.
Debugger attached.
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed (1 ms)
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    √ should call `new Promise()`
    √ should take a single argument (1 ms)
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument (1 ms)
    √ should resolve when called with a string argument (1 ms)
    × should reject with an Error object when called without an argument (2 ms)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: [Error: You didn't pass in a first name!]

      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
    > 92 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      93 |   });
      94 | });
      95 |

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:92:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 8 passed, 9 total
Snapshots:   0 total
Time:        1.056 s
Ran all test suites matching /ex1-johnWho.test.js/i.
Waiting for the debugger to disconnect...
Waiting for the debugger to disconnect...
2022-10-21 01:55:56 info: ---------------------------------------
2022-10-21 01:55:56 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-21 01:55:56 info: ---------------------------------------
2022-10-21 01:56:01 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Debugger attached.
Debugger attached.
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    √ should call `new Promise()`
    √ should take a single argument
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    √ should resolve when called with a string argument (1 ms)
    × should reject with an Error object when called without an argument (1 ms)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: "You didn't pass in a first name!"

      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
    > 92 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      93 |   });
      94 | });
      95 |

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:92:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 8 passed, 9 total
Snapshots:   0 total
Time:        1.054 s
Ran all test suites matching /ex1-johnWho.test.js/i.
Waiting for the debugger to disconnect...
Waiting for the debugger to disconnect...
2022-10-21 01:57:56 info: ---------------------------------------
2022-10-21 01:57:56 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-21 01:57:56 info: ---------------------------------------
2022-10-21 01:58:02 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Debugger attached.
Debugger attached.
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed (1 ms)
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    √ should call `new Promise()`
    √ should take a single argument (1 ms)
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument (1 ms)
    √ should resolve when called with a string argument (2 ms)
    × should reject with an Error object when called without an argument (2 ms)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: {"error": "You didn't pass in a first name!"}

      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
    > 92 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      93 |   });
      94 | });
      95 |

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:92:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 8 passed, 9 total
Snapshots:   0 total
Time:        1.232 s
Ran all test suites matching /ex1-johnWho.test.js/i.
Waiting for the debugger to disconnect...
Waiting for the debugger to disconnect...
2022-10-21 01:58:44 info: ---------------------------------------
2022-10-21 01:58:44 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-21 01:58:44 info: ---------------------------------------
2022-10-21 01:58:49 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Debugger attached.
Debugger attached.
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    √ should call `new Promise()`
    √ should take a single argument
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    √ should resolve when called with a string argument (2 ms)
    × should reject with an Error object when called without an argument (3 ms)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: {"error": "You didn't pass in a first name!"}

      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
    > 92 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      93 |   });
      94 | });
      95 |

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:92:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 8 passed, 9 total
Snapshots:   0 total
Time:        1.129 s
Ran all test suites matching /ex1-johnWho.test.js/i.
Waiting for the debugger to disconnect...
Waiting for the debugger to disconnect...
2022-10-21 01:59:11 info: ---------------------------------------
2022-10-21 01:59:11 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-21 01:59:11 info: ---------------------------------------
2022-10-21 01:59:16 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Debugger attached.
Debugger attached.
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed
    √ `getAnonName` should not contain unneeded console.log calls
    √ should call `new Promise()`
    √ should take a single argument
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    √ should resolve when called with a string argument (1 ms)
    × should reject with an Error object when called without an argument (2 ms)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: {"error": "You didn't pass in a first name!"}

      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
    > 92 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      93 |   });
      94 | });
      95 |

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:92:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 8 passed, 9 total
Snapshots:   0 total
Time:        1.065 s, estimated 2 s
Ran all test suites matching /ex1-johnWho.test.js/i.
Waiting for the debugger to disconnect...
Waiting for the debugger to disconnect...
2022-10-21 02:00:25 info: ---------------------------------------
2022-10-21 02:00:25 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-21 02:00:25 info: ---------------------------------------
2022-10-21 02:00:30 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Debugger attached.
Debugger attached.
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    √ should call `new Promise()` (1 ms)
    √ should take a single argument
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    √ should resolve when called with a string argument (2 ms)
    × should reject with an Error object when called without an argument (2 ms)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: [Error: You didn't pass in a first name!]

      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
    > 92 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      93 |   });
      94 | });
      95 |

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:92:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 8 passed, 9 total
Snapshots:   0 total
Time:        1.053 s
Ran all test suites matching /ex1-johnWho.test.js/i.
Waiting for the debugger to disconnect...
Waiting for the debugger to disconnect...
2022-10-21 02:01:58 info: ---------------------------------------
2022-10-21 02:01:58 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-21 02:01:58 info: ---------------------------------------
2022-10-21 02:02:03 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Debugger attached.
Debugger attached.
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed (1 ms)
    √ `getAnonName` should not contain unneeded console.log calls (1 ms)
    √ should call `new Promise()`
    √ should take a single argument (1 ms)
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument (1 ms)
    √ should resolve when called with a string argument (1 ms)
    × should reject with an Error object when called without an argument (2 ms)

  ● getAnonName › should reject with an Error object when called without an argument

    expect(received).rejects.toBeInstanceOf()

    Received promise resolved instead of rejected
    Resolved to value: [Error: You didn't pass in a first name!]

      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
    > 92 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |            ^
      93 |   });
      94 | });
      95 |

      at expect (node_modules/expect/build/index.js:128:15)
      at Object.expect (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:92:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 8 passed, 9 total
Snapshots:   0 total
Time:        1.08 s
Ran all test suites matching /ex1-johnWho.test.js/i.
Waiting for the debugger to disconnect...
Waiting for the debugger to disconnect...
2022-10-21 02:05:16 info: ---------------------------------------
2022-10-21 02:05:16 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-21 02:05:16 info: ---------------------------------------
2022-10-21 02:05:21 info: All unit tests passed.
2022-10-21 02:05:29 info: All steps were completed successfully
2022-10-21 12:51:14 info: -------------------------------------------------
2022-10-21 12:51:14 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-10-21 12:51:14 info: -------------------------------------------------
2022-10-21 12:51:19 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed (4 ms)
    √ `checkDoubleDigits` should not contain unneeded console.log calls (1 ms)
    √ should call new Promise()
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    √ should be a function that takes a single argument
    × (9) should return a rejected promise with an Error object (2 ms)
    √ (10) should return a promise that resolves to "This is a double digit number!" (2 ms)
    √ (99) should return a promise that resolves to "This is a double digit number!"
    × (100) should return a rejected promise with an Error object

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf(expected)

    Expected constructor: Error

    Received value has no prototype
    Received value: "Expected a double digit number but got 9"

      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
    > 67 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |                                    ^
      68 |   });
      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {

      at Object.toBeInstanceOf (node_modules/expect/build/index.js:241:22)
      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:67:36)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf(expected)

    Expected constructor: Error

    Received value has no prototype
    Received value: "Expected a double digit number but got 100"

      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
    > 93 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |                                    ^
      94 |   });
      95 | });
      96 |

      at Object.toBeInstanceOf (node_modules/expect/build/index.js:241:22)
      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:93:36)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 9 passed, 11 total
Snapshots:   0 total
Time:        1.07 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-10-21 12:53:21 info: -------------------------------------------------
2022-10-21 12:53:21 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-10-21 12:53:21 info: -------------------------------------------------
2022-10-21 12:53:25 info: All unit tests passed.
2022-10-21 12:53:31 info: All steps were completed successfully
2022-10-21 12:54:15 info: ---------------------------------------
2022-10-21 12:54:15 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-10-21 12:54:15 info: ---------------------------------------
2022-10-21 12:54:19 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    √ should exist and be executable (2 ms)
    × should have all TODO comments removed (2 ms)
    × should call `new Promise()`
    × `resolve()` should be called with a one argument (3 ms)
    × `reject()` should be called with a one argument (1 ms)
    × should resolve when the die settles successfully (1 ms)
    × should reject with an Error when the die rolls off the table (1 ms)

  ● rollDie › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.toBeFalsy (test-runner/unit-test-helpers.js:105:42)

  ● rollDie › should call `new Promise()`

    expect(received).toBeDefined()

    Received: undefined

      38 |
      39 |   test('should call `new Promise()`', () => {
    > 40 |     expect(state.newPromise).toBeDefined();
         |                              ^
      41 |   });
      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:40:30)

  ● rollDie › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      42 |
      43 |   test('`resolve()` should be called with a one argument', () => {
    > 44 |     expect(state.resolve).toBe(1);
         |                           ^
      45 |   });
      46 |
      47 |   test('`reject()` should be called with a one argument', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:44:27)

  ● rollDie › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      46 |
      47 |   test('`reject()` should be called with a one argument', () => {
    > 48 |     expect(state.reject).toBe(1);
         |                          ^
      49 |   });
      50 |
      51 |   test('should resolve when the die settles successfully', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:48:26)

  ● rollDie › should resolve when the die settles successfully

    TypeError: callback is not a function

      32 |     if (roll === randomRollsToDo) {
      33 |       // TODO replace "success" callback
    > 34 |       callback(null, value);
         |       ^
      35 |     }
      36 |
      37 |     // Schedule the next roll todo until no more rolls to do

      at callback (3-UsingAPIs/Week1/homework/ex3-rollDie.js:34:7)
      at rollOnce (3-UsingAPIs/Week1/homework/ex3-rollDie.js:39:24)
      at cb (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:59:35)
      at setTimeout (3-UsingAPIs/Week1/homework/ex3-rollDie.js:39:7)
      at rollOnce (3-UsingAPIs/Week1/homework/ex3-rollDie.js:39:24)
      at cb (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:59:35)
      at setTimeout (3-UsingAPIs/Week1/homework/ex3-rollDie.js:39:7)
      at rollOnce (3-UsingAPIs/Week1/homework/ex3-rollDie.js:44:3)
      at Object.rollDie (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:61:21)

  ● rollDie › should resolve when the die settles successfully

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      50 |
      51 |   test('should resolve when the die settles successfully', () => {
    > 52 |     expect.assertions(3);
         |            ^
      53 |     expect(exported).toBeDefined();
      54 |
      55 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:52:12)

  ● rollDie › should reject with an Error when the die rolls off the table

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      73 |
      74 |   test('should reject with an Error when the die rolls off the table', async () => {
    > 75 |     expect.assertions(3);
         |            ^
      76 |     expect(exported).toBeDefined();
      77 |
      78 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:75:12)

Test Suites: 1 failed, 1 total
Tests:       6 failed, 1 passed, 7 total
Snapshots:   0 total
Time:        0.83 s
Ran all test suites matching /ex3-rollDie.test.js/i.
2022-10-21 02:58:17 info: ---------------------------------------
2022-10-21 02:58:17 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-10-21 02:58:17 info: ---------------------------------------
2022-10-21 02:58:22 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    √ should exist and be executable (1 ms)
    × should have all TODO comments removed (2 ms)
    √ should call `new Promise()`
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument (1 ms)
    √ should resolve when the die settles successfully (2 ms)
    √ should reject with an Error when the die rolls off the table (1 ms)

  ● rollDie › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.toBeFalsy (test-runner/unit-test-helpers.js:105:42)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        1.048 s
Ran all test suites matching /ex3-rollDie.test.js/i.
2022-10-21 02:58:25 error: *** ESLint Report ***

ex3-rollDie.js
   3:9   error    'reject' is assigned a value but never used  no-unused-vars
  30:3   warning  Remove commented-out code                    hyf/no-commented-out-code
  36:3   warning  Remove commented-out code                    hyf/no-commented-out-code
  42:3   warning  Remove commented-out code                    hyf/no-commented-out-code
  48:3   warning  Remove commented-out code                    hyf/no-commented-out-code
  54:3   warning  Remove commented-out code                    hyf/no-commented-out-code
  61:46  error    'value' is not defined                       no-undef
  64:36  error    Empty block statement                        no-empty
  68:3   warning  Remove commented-out code                    hyf/no-commented-out-code

✖ 9 problems (3 errors, 6 warnings)


2022-10-21 03:01:11 info: ---------------------------------------
2022-10-21 03:01:11 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-10-21 03:01:11 info: ---------------------------------------
2022-10-21 03:01:14 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    √ should exist and be executable (1 ms)
    × should have all TODO comments removed (2 ms)
    √ should call `new Promise()`
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument
    √ should resolve when the die settles successfully (1 ms)
    √ should reject with an Error when the die rolls off the table

  ● rollDie › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.toBeFalsy (test-runner/unit-test-helpers.js:105:42)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        0.795 s, estimated 1 s
Ran all test suites matching /ex3-rollDie.test.js/i.
2022-10-21 03:01:17 error: *** ESLint Report ***

ex3-rollDie.js
   3:9   error    'reject' is assigned a value but never used  no-unused-vars
  30:3   warning  Remove commented-out code                    hyf/no-commented-out-code
  36:3   warning  Remove commented-out code                    hyf/no-commented-out-code
  42:3   warning  Remove commented-out code                    hyf/no-commented-out-code
  48:3   warning  Remove commented-out code                    hyf/no-commented-out-code
  54:3   warning  Remove commented-out code                    hyf/no-commented-out-code
  63:36  error    Empty block statement                        no-empty
  67:3   warning  Remove commented-out code                    hyf/no-commented-out-code

✖ 8 problems (2 errors, 6 warnings)


2022-10-21 04:02:46 info: ---------------------------------------
2022-10-21 04:02:46 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-10-21 04:02:46 info: ---------------------------------------
2022-10-21 04:02:49 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed
    √ should call `new Promise()`
    √ `resolve()` should be called with a one argument
    √ `reject()` should be called with a one argument
    √ should resolve when the die settles successfully (1 ms)
    × should reject with an Error when the die rolls off the table (2 ms)

  ● rollDie › should reject with an Error when the die rolls off the table

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Error

    Received value has no prototype
    Received value: 10

      87 |       await promise;
      88 |     } catch (err) {
    > 89 |       expect(err).toBeInstanceOf(Error);
         |                   ^
      90 |     } finally {
      91 |       setTimeoutSpy.mockRestore();
      92 |       randomSpy.mockRestore();

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:89:19)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        0.795 s, estimated 1 s
Ran all test suites matching /ex3-rollDie.test.js/i.
2022-10-21 04:03:57 info: ---------------------------------------
2022-10-21 04:03:57 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-10-21 04:03:57 info: ---------------------------------------
2022-10-21 04:04:00 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed (1 ms)
    √ should call `new Promise()`
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument
    √ should resolve when the die settles successfully (1 ms)
    × should reject with an Error when the die rolls off the table (2 ms)

  ● rollDie › should reject with an Error when the die rolls off the table

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Error

    Received value has no prototype
    Received value: 10

      87 |       await promise;
      88 |     } catch (err) {
    > 89 |       expect(err).toBeInstanceOf(Error);
         |                   ^
      90 |     } finally {
      91 |       setTimeoutSpy.mockRestore();
      92 |       randomSpy.mockRestore();

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:89:19)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        0.679 s, estimated 1 s
Ran all test suites matching /ex3-rollDie.test.js/i.
2022-10-21 04:06:41 info: ---------------------------------------
2022-10-21 04:06:41 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-10-21 04:06:41 info: ---------------------------------------
2022-10-21 04:06:44 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed
    √ should call `new Promise()`
    √ `resolve()` should be called with a one argument
    × `reject()` should be called with a one argument (2 ms)
    √ should resolve when the die settles successfully (2 ms)
    × should reject with an Error when the die rolls off the table (1 ms)

  ● rollDie › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 2

      46 |
      47 |   test('`reject()` should be called with a one argument', () => {
    > 48 |     expect(state.reject).toBe(1);
         |                          ^
      49 |   });
      50 |
      51 |   test('should resolve when the die settles successfully', () => {

      at Object.toBe (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:48:26)

  ● rollDie › should reject with an Error when the die rolls off the table

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Error

    Received value has no prototype
    Received value: 10

      87 |       await promise;
      88 |     } catch (err) {
    > 89 |       expect(err).toBeInstanceOf(Error);
         |                   ^
      90 |     } finally {
      91 |       setTimeoutSpy.mockRestore();
      92 |       randomSpy.mockRestore();

      at Object.toBeInstanceOf (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:89:19)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 5 passed, 7 total
Snapshots:   0 total
Time:        0.669 s, estimated 1 s
Ran all test suites matching /ex3-rollDie.test.js/i.
2022-10-21 04:16:26 info: ---------------------------------------
2022-10-21 04:16:26 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-10-21 04:16:26 info: ---------------------------------------
2022-10-21 04:16:30 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-rollDie.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js
  rollDie
    √ should exist and be executable (3 ms)
    √ should have all TODO comments removed (1 ms)
    √ should call `new Promise()`
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument
    √ should resolve when the die settles successfully (2 ms)
    × should reject with an Error when the die rolls off the table (1 ms)

  ● rollDie › should reject with an Error when the die rolls off the table

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      73 |
      74 |   test('should reject with an Error when the die rolls off the table', async () => {
    > 75 |     expect.assertions(3);
         |            ^
      76 |     expect(exported).toBeDefined();
      77 |
      78 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.assertions (3-UsingAPIs/Week1/unit-tests/ex3-rollDie.test.js:75:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        0.818 s, estimated 1 s
Ran all test suites matching /ex3-rollDie.test.js/i.
2022-10-21 07:12:31 info: ---------------------------------------
2022-10-21 07:12:31 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-10-21 07:12:31 info: ---------------------------------------
2022-10-21 07:12:35 info: All unit tests passed.
2022-10-21 07:12:41 info: All steps were completed successfully
2022-10-21 07:25:12 info: ---------------------------------------
2022-10-21 07:25:12 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-10-21 07:25:12 info: ---------------------------------------
2022-10-21 07:25:15 info: All unit tests passed.
2022-10-21 07:25:21 error: *** Spell Checker Report ***

ex3-rollDie.js:52:92 - Unknown word (Rollsto)
ex3-rollDie.js:54:18 - Unknown word (Rollsto)

2022-10-21 07:26:16 info: ---------------------------------------
2022-10-21 07:26:16 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-10-21 07:26:16 info: ---------------------------------------
2022-10-21 07:26:19 info: All unit tests passed.
2022-10-21 07:26:24 info: All steps were completed successfully
2022-10-21 09:42:22 info: --------------------------------------------
2022-10-21 09:42:22 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-10-21 09:42:22 info: --------------------------------------------
2022-10-21 09:42:29 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (1 ms)
    √ should have all TODO comments removed
    √ `rollDice` should not contain unneeded console.log calls (1 ms)
    × should use `dice.map()` (2 ms)
    √ should use `Promise.all()`
    √ should resolve when all dice settle successfully (8 ms)
    √ should reject with an Error when a die rolls off the table (88 ms)

  ● ex4-pokerDiceAll › should use `dice.map()`

    expect(received).toBeDefined()

    Received: undefined

      38 |
      39 |   test('should use `dice.map()`', () => {
    > 40 |     expect(state.diceMap).toBeDefined();
         |                           ^
      41 |   });
      42 |
      43 |   test('should use `Promise.all()`', () => {

      at Object.toBeDefined (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:40:27)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 6 passed, 7 total
Snapshots:   0 total
Time:        1.763 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.
2022-10-21 09:43:12 info: --------------------------------------------
2022-10-21 09:43:12 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-10-21 09:43:12 info: --------------------------------------------
2022-10-21 09:43:16 info: All unit tests passed.
2022-10-21 09:43:18 error: *** ESLint Report ***

ex4-pokerDiceAll.js
  32:8  warning  Results from `map` are unused. Replace `map` with `forEach`  no-restricted-syntax
  32:8  error    Results from `map` are unused. Replace `map` with `forEach`  hyf/use-map-result

✖ 2 problems (1 error, 1 warning)


2022-10-21 09:45:08 info: --------------------------------------------
2022-10-21 09:45:08 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-10-21 09:45:08 info: --------------------------------------------
2022-10-21 09:45:12 info: All unit tests passed.
2022-10-21 09:45:17 info: All steps were completed successfully
2022-10-21 09:58:08 info: ----------------------------------------------
2022-10-21 09:58:08 info: >>> Running Unit Test `ex5-pokerDiceChain` <<<
2022-10-21 09:58:08 info: ----------------------------------------------
2022-10-21 09:58:12 error: *** Unit Test Error Report ***

Command failed: npx jest ex5-pokerDiceChain.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex5-pokerDiceChain.test.js
  ex5-pokerDiceChain
    √ should exist and be executable (2 ms)
    × should have all TODO comments removed (2 ms)
    √ `rollDice` should not contain unneeded console.log calls (2 ms)
    √ should resolve when all dice settle successfully (109 ms)
    √ should reject with an Error when a die rolls off the table (83 ms)

  ● ex5-pokerDiceChain › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.toBeFalsy (test-runner/unit-test-helpers.js:105:42)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 4 passed, 5 total
Snapshots:   0 total
Time:        1.093 s
Ran all test suites matching /ex5-pokerDiceChain.test.js/i.
2022-10-21 09:59:17 info: ----------------------------------------------
2022-10-21 09:59:17 info: >>> Running Unit Test `ex5-pokerDiceChain` <<<
2022-10-21 09:59:17 info: ----------------------------------------------
2022-10-21 09:59:21 info: All unit tests passed.
2022-10-21 09:59:27 info: All steps were completed successfully
2022-10-21 10:00:49 info: ---------------------------------------
2022-10-21 10:00:49 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-10-21 10:00:49 info: ---------------------------------------
2022-10-21 10:00:52 info: All unit tests passed.
2022-10-21 10:00:58 info: All steps were completed successfully
2022-10-21 10:01:14 info: -------------------------------------------------
2022-10-21 10:01:14 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-10-21 10:01:14 info: -------------------------------------------------
2022-10-21 10:01:17 info: All unit tests passed.
2022-10-21 10:01:23 info: All steps were completed successfully
2022-10-21 10:01:40 info: ---------------------------------------
2022-10-21 10:01:40 info: >>> Running Unit Test `ex3-rollDie` <<<
2022-10-21 10:01:40 info: ---------------------------------------
2022-10-21 10:01:43 info: All unit tests passed.
2022-10-21 10:01:49 info: All steps were completed successfully
2022-10-21 10:02:03 info: --------------------------------------------
2022-10-21 10:02:03 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2022-10-21 10:02:03 info: --------------------------------------------
2022-10-21 10:02:07 info: All unit tests passed.
2022-10-21 10:02:12 info: All steps were completed successfully
