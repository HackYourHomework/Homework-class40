2022-09-30 10:11:05 info: ------------------------------------------
2022-09-30 10:11:05 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-09-30 10:11:05 info: ------------------------------------------
2022-09-30 10:11:12 info: All unit tests passed.
2022-09-30 10:11:19 info: All steps were completed successfully
2022-10-01 05:02:37 info: ----------------------------------------
2022-10-01 05:02:37 info: >>> Running Unit Test `ex1-bookList` <<<
2022-10-01 05:02:37 info: ----------------------------------------
2022-10-01 05:02:47 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-bookList.test.js --colors
Debugger listening on ws://127.0.0.1:58428/ab91c582-3118-48c6-93f2-d36691f26021
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
Debugger listening on ws://127.0.0.1:58431/56b6f3c0-fa79-4618-b68f-cc7876e2aeae
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  2-Browsers/Week1/unit-tests/ex1-bookList.test.js
  Generated HTML
    ✕ HTML should be syntactically valid
    ✕ should have all TODO comments removed
    ✕ should contain a <ul> that is a child of <div id="bookList">
    ✕ should contain a <ul> with 3 <li> elements
    ✕ should contain an <li> with title and author for each book of the `myBooks` array
    ✕ should contain an <img> element for each book

  ● Generated HTML › HTML should be syntactically valid

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/node-fetch/src/index.js:9
    import http from 'node:http';
    ^^^^^^

    SyntaxError: Cannot use import statement outside a module

      33 |   );
      34 |
    > 35 |   window.fetch = require('node-fetch');
         |                  ^
      36 |   await sleep(1000);
      37 |   return window;
      38 | }

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1796:14)
      at require (test-runner/jsdom-helpers.js:35:18)
      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:14:21)

  ● Generated HTML › should have all TODO comments removed

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/node-fetch/src/index.js:9
    import http from 'node:http';
    ^^^^^^

    SyntaxError: Cannot use import statement outside a module

      33 |   );
      34 |
    > 35 |   window.fetch = require('node-fetch');
         |                  ^
      36 |   await sleep(1000);
      37 |   return window;
      38 | }

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1796:14)
      at require (test-runner/jsdom-helpers.js:35:18)
      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:14:21)

  ● Generated HTML › should contain a <ul> that is a child of <div id="bookList">

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/node-fetch/src/index.js:9
    import http from 'node:http';
    ^^^^^^

    SyntaxError: Cannot use import statement outside a module

      33 |   );
      34 |
    > 35 |   window.fetch = require('node-fetch');
         |                  ^
      36 |   await sleep(1000);
      37 |   return window;
      38 | }

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1796:14)
      at require (test-runner/jsdom-helpers.js:35:18)
      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:14:21)

  ● Generated HTML › should contain a <ul> with 3 <li> elements

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/node-fetch/src/index.js:9
    import http from 'node:http';
    ^^^^^^

    SyntaxError: Cannot use import statement outside a module

      33 |   );
      34 |
    > 35 |   window.fetch = require('node-fetch');
         |                  ^
      36 |   await sleep(1000);
      37 |   return window;
      38 | }

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1796:14)
      at require (test-runner/jsdom-helpers.js:35:18)
      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:14:21)

  ● Generated HTML › should contain an <li> with title and author for each book of the `myBooks` array

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/node-fetch/src/index.js:9
    import http from 'node:http';
    ^^^^^^

    SyntaxError: Cannot use import statement outside a module

      33 |   );
      34 |
    > 35 |   window.fetch = require('node-fetch');
         |                  ^
      36 |   await sleep(1000);
      37 |   return window;
      38 | }

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1796:14)
      at require (test-runner/jsdom-helpers.js:35:18)
      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:14:21)

  ● Generated HTML › should contain an <img> element for each book

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/node-fetch/src/index.js:9
    import http from 'node:http';
    ^^^^^^

    SyntaxError: Cannot use import statement outside a module

      33 |   );
      34 |
    > 35 |   window.fetch = require('node-fetch');
         |                  ^
      36 |   await sleep(1000);
      37 |   return window;
      38 | }

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1796:14)
      at require (test-runner/jsdom-helpers.js:35:18)
      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:14:21)

Test Suites: 1 failed, 1 total
Tests:       6 failed, 6 total
Snapshots:   0 total
Time:        4.182 s
Ran all test suites matching /ex1-bookList.test.js/i.
Waiting for the debugger to disconnect...
Waiting for the debugger to disconnect...
2022-10-02 10:24:51 info: ----------------------------------------
2022-10-02 10:24:51 info: >>> Running Unit Test `ex1-bookList` <<<
2022-10-02 10:24:51 info: ----------------------------------------
2022-10-02 10:25:02 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-bookList.test.js --colors
Debugger listening on ws://127.0.0.1:63951/22b496d5-6829-472c-8e00-9b69aaff867a
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
Debugger listening on ws://127.0.0.1:63955/23a2d7f5-f6e7-46c5-8a15-5d121d425684
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  2-Browsers/Week1/unit-tests/ex1-bookList.test.js
  Generated HTML
    ✕ HTML should be syntactically valid (1 ms)
    ✕ should have all TODO comments removed
    ✕ should contain a <ul> that is a child of <div id="bookList">
    ✕ should contain a <ul> with 3 <li> elements
    ✕ should contain an <li> with title and author for each book of the `myBooks` array
    ✕ should contain an <img> element for each book

  ● Generated HTML › HTML should be syntactically valid

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/node-fetch/src/index.js:9
    import http from 'node:http';
    ^^^^^^

    SyntaxError: Cannot use import statement outside a module

      33 |   );
      34 |
    > 35 |   window.fetch = require('node-fetch');
         |                  ^
      36 |   await sleep(1000);
      37 |   return window;
      38 | }

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1796:14)
      at require (test-runner/jsdom-helpers.js:35:18)
      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:14:21)

  ● Generated HTML › should have all TODO comments removed

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/node-fetch/src/index.js:9
    import http from 'node:http';
    ^^^^^^

    SyntaxError: Cannot use import statement outside a module

      33 |   );
      34 |
    > 35 |   window.fetch = require('node-fetch');
         |                  ^
      36 |   await sleep(1000);
      37 |   return window;
      38 | }

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1796:14)
      at require (test-runner/jsdom-helpers.js:35:18)
      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:14:21)

  ● Generated HTML › should contain a <ul> that is a child of <div id="bookList">

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/node-fetch/src/index.js:9
    import http from 'node:http';
    ^^^^^^

    SyntaxError: Cannot use import statement outside a module

      33 |   );
      34 |
    > 35 |   window.fetch = require('node-fetch');
         |                  ^
      36 |   await sleep(1000);
      37 |   return window;
      38 | }

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1796:14)
      at require (test-runner/jsdom-helpers.js:35:18)
      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:14:21)

  ● Generated HTML › should contain a <ul> with 3 <li> elements

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/node-fetch/src/index.js:9
    import http from 'node:http';
    ^^^^^^

    SyntaxError: Cannot use import statement outside a module

      33 |   );
      34 |
    > 35 |   window.fetch = require('node-fetch');
         |                  ^
      36 |   await sleep(1000);
      37 |   return window;
      38 | }

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1796:14)
      at require (test-runner/jsdom-helpers.js:35:18)
      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:14:21)

  ● Generated HTML › should contain an <li> with title and author for each book of the `myBooks` array

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/node-fetch/src/index.js:9
    import http from 'node:http';
    ^^^^^^

    SyntaxError: Cannot use import statement outside a module

      33 |   );
      34 |
    > 35 |   window.fetch = require('node-fetch');
         |                  ^
      36 |   await sleep(1000);
      37 |   return window;
      38 | }

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1796:14)
      at require (test-runner/jsdom-helpers.js:35:18)
      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:14:21)

  ● Generated HTML › should contain an <img> element for each book

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/node-fetch/src/index.js:9
    import http from 'node:http';
    ^^^^^^

    SyntaxError: Cannot use import statement outside a module

      33 |   );
      34 |
    > 35 |   window.fetch = require('node-fetch');
         |                  ^
      36 |   await sleep(1000);
      37 |   return window;
      38 | }

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1796:14)
      at require (test-runner/jsdom-helpers.js:35:18)
      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:14:21)

Test Suites: 1 failed, 1 total
Tests:       6 failed, 6 total
Snapshots:   0 total
Time:        5.06 s
Ran all test suites matching /ex1-bookList.test.js/i.
Waiting for the debugger to disconnect...
Waiting for the debugger to disconnect...
2022-10-02 11:29:54 info: ---------------------------------------
2022-10-02 11:29:54 info: >>> Running Unit Test `ex2-aboutMe` <<<
2022-10-02 11:29:54 info: ---------------------------------------
2022-10-02 11:30:03 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-aboutMe.test.js --colors
Debugger listening on ws://127.0.0.1:49886/a7c98823-3c52-4d88-92f4-c4e453177074
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
Debugger listening on ws://127.0.0.1:49893/b1911347-5a15-4290-9414-1fe1047bfb1f
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js
  Generated HTML
    ✕ should be syntactically valid
    ✕ should have all TODO comments removed
    ✕ the body font-family should be `Arial, sans-serif` (1 ms)
    ✕ each <li> should have the CSS class `list-item`
    ✕ each <li> should rendered red

  ● Generated HTML › should be syntactically valid

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/node-fetch/src/index.js:9
    import http from 'node:http';
    ^^^^^^

    SyntaxError: Cannot use import statement outside a module

      33 |   );
      34 |
    > 35 |   window.fetch = require('node-fetch');
         |                  ^
      36 |   await sleep(1000);
      37 |   return window;
      38 | }

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1796:14)
      at require (test-runner/jsdom-helpers.js:35:18)
      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:12:14)

  ● Generated HTML › should have all TODO comments removed

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/node-fetch/src/index.js:9
    import http from 'node:http';
    ^^^^^^

    SyntaxError: Cannot use import statement outside a module

      33 |   );
      34 |
    > 35 |   window.fetch = require('node-fetch');
         |                  ^
      36 |   await sleep(1000);
      37 |   return window;
      38 | }

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1796:14)
      at require (test-runner/jsdom-helpers.js:35:18)
      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:12:14)

  ● Generated HTML › the body font-family should be `Arial, sans-serif`

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/node-fetch/src/index.js:9
    import http from 'node:http';
    ^^^^^^

    SyntaxError: Cannot use import statement outside a module

      33 |   );
      34 |
    > 35 |   window.fetch = require('node-fetch');
         |                  ^
      36 |   await sleep(1000);
      37 |   return window;
      38 | }

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1796:14)
      at require (test-runner/jsdom-helpers.js:35:18)
      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:12:14)

  ● Generated HTML › each <li> should have the CSS class `list-item`

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/node-fetch/src/index.js:9
    import http from 'node:http';
    ^^^^^^

    SyntaxError: Cannot use import statement outside a module

      33 |   );
      34 |
    > 35 |   window.fetch = require('node-fetch');
         |                  ^
      36 |   await sleep(1000);
      37 |   return window;
      38 | }

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1796:14)
      at require (test-runner/jsdom-helpers.js:35:18)
      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:12:14)

  ● Generated HTML › each <li> should rendered red

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/node-fetch/src/index.js:9
    import http from 'node:http';
    ^^^^^^

    SyntaxError: Cannot use import statement outside a module

      33 |   );
      34 |
    > 35 |   window.fetch = require('node-fetch');
         |                  ^
      36 |   await sleep(1000);
      37 |   return window;
      38 | }

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1796:14)
      at require (test-runner/jsdom-helpers.js:35:18)
      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:12:14)

Test Suites: 1 failed, 1 total
Tests:       5 failed, 5 total
Snapshots:   0 total
Time:        4.2 s
Ran all test suites matching /ex2-aboutMe.test.js/i.
Waiting for the debugger to disconnect...
Waiting for the debugger to disconnect...
2022-10-02 11:30:09 error: *** Spell Checker Report ***

ex2-aboutMe/index.js:17:25 - Unknown word (Kyiv)

2022-10-02 11:31:24 info: ---------------------------------------
2022-10-02 11:31:24 info: >>> Running Unit Test `ex2-aboutMe` <<<
2022-10-02 11:31:24 info: ---------------------------------------
2022-10-02 11:31:36 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-aboutMe.test.js --colors
Debugger listening on ws://127.0.0.1:50367/1f45f726-af85-4b5a-85a5-1c34ccb762a7
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
Debugger listening on ws://127.0.0.1:50379/d6bacbe7-74e3-4ad1-a9da-48c362dc39bd
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
 FAIL  2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js (5.939 s)
  Generated HTML
    ✓ should be syntactically valid (154 ms)
    ✓ should have all TODO comments removed
    ✕ the body font-family should be `Arial, sans-serif` (3 ms)
    ✓ each <li> should have the CSS class `list-item` (2 ms)
    ✕ each <li> should rendered red (69 ms)

  ● Generated HTML › the body font-family should be `Arial, sans-serif`

    expect(received).toEqual(expected) // deep equality

    Expected: StringContaining "Arial"
    Received: ""

      25 |   test('the body font-family should be `Arial, sans-serif`', () => {
      26 |     const fontFamily = document.body.style.fontFamily;
    > 27 |     expect(fontFamily).toEqual(expect.stringContaining('Arial'));
         |                        ^
      28 |     expect(fontFamily).toEqual(expect.stringContaining('sans-serif'));
      29 |   });
      30 |

      at Object.toEqual (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:27:24)

  ● Generated HTML › each <li> should rendered red

    expect(received).toBeTruthy()

    Received: false

      40 |       (node) => window.getComputedStyle(node).color
      41 |     );
    > 42 |     expect(colors.every((color) => color === 'red')).toBeTruthy();
         |                                                      ^
      43 |   });
      44 | });
      45 |

      at Object.toBeTruthy (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:42:54)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 3 passed, 5 total
Snapshots:   0 total
Time:        6.036 s
Ran all test suites matching /ex2-aboutMe.test.js/i.
Waiting for the debugger to disconnect...
Waiting for the debugger to disconnect...
2022-10-02 11:34:19 info: ---------------------------------------
2022-10-02 11:34:19 info: >>> Running Unit Test `ex2-aboutMe` <<<
2022-10-02 11:34:19 info: ---------------------------------------
2022-10-02 11:34:29 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-aboutMe.test.js --colors
Debugger listening on ws://127.0.0.1:51122/097e4dee-06bc-4478-a032-6b1f1e7461a2
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
Debugger listening on ws://127.0.0.1:51129/6f697626-31cd-4d82-84a0-6ed9d211215c
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
 FAIL  2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js (6.521 s)
  Generated HTML
    ✓ should be syntactically valid (191 ms)
    ✓ should have all TODO comments removed (1 ms)
    ✕ the body font-family should be `Arial, sans-serif` (5 ms)
    ✓ each <li> should have the CSS class `list-item` (5 ms)
    ✓ each <li> should rendered red (209 ms)

  ● Generated HTML › the body font-family should be `Arial, sans-serif`

    expect(received).toEqual(expected) // deep equality

    Expected: StringContaining "Arial"
    Received: ""

      25 |   test('the body font-family should be `Arial, sans-serif`', () => {
      26 |     const fontFamily = document.body.style.fontFamily;
    > 27 |     expect(fontFamily).toEqual(expect.stringContaining('Arial'));
         |                        ^
      28 |     expect(fontFamily).toEqual(expect.stringContaining('sans-serif'));
      29 |   });
      30 |

      at Object.toEqual (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:27:24)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 4 passed, 5 total
Snapshots:   0 total
Time:        6.657 s
Ran all test suites matching /ex2-aboutMe.test.js/i.
Waiting for the debugger to disconnect...
Waiting for the debugger to disconnect...
2022-10-02 11:36:29 info: ---------------------------------------
2022-10-02 11:36:29 info: >>> Running Unit Test `ex2-aboutMe` <<<
2022-10-02 11:36:29 info: ---------------------------------------
2022-10-02 11:36:40 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-aboutMe.test.js --colors
Debugger listening on ws://127.0.0.1:51785/5f7e8fee-7e84-49f8-8a34-2b6cbcdd5f97
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
Debugger listening on ws://127.0.0.1:51810/4b517c36-21d9-4978-8c22-9f8845f3c8a8
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
 FAIL  2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js (5.568 s)
  Generated HTML
    ✓ should be syntactically valid (172 ms)
    ✓ should have all TODO comments removed (1 ms)
    ✕ the body font-family should be `Arial, sans-serif` (6 ms)
    ✓ each <li> should have the CSS class `list-item` (2 ms)
    ✓ each <li> should rendered red (160 ms)

  ● Generated HTML › the body font-family should be `Arial, sans-serif`

    expect(received).toEqual(expected) // deep equality

    Expected: StringContaining "Arial"
    Received: ""

      25 |   test('the body font-family should be `Arial, sans-serif`', () => {
      26 |     const fontFamily = document.body.style.fontFamily;
    > 27 |     expect(fontFamily).toEqual(expect.stringContaining('Arial'));
         |                        ^
      28 |     expect(fontFamily).toEqual(expect.stringContaining('sans-serif'));
      29 |   });
      30 |

      at Object.toEqual (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:27:24)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 4 passed, 5 total
Snapshots:   0 total
Time:        5.713 s, estimated 7 s
Ran all test suites matching /ex2-aboutMe.test.js/i.
Waiting for the debugger to disconnect...
Waiting for the debugger to disconnect...
2022-10-02 11:37:42 info: ---------------------------------------
2022-10-02 11:37:42 info: >>> Running Unit Test `ex2-aboutMe` <<<
2022-10-02 11:37:42 info: ---------------------------------------
2022-10-02 11:37:54 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-aboutMe.test.js --colors
Debugger listening on ws://127.0.0.1:52148/817ca8ec-892b-4537-92c3-4aa374f7927e
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
Debugger listening on ws://127.0.0.1:52159/9ecd5517-30e4-4d92-a871-9cb8713ae828
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
 FAIL  2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js (6.622 s)
  Generated HTML
    ✓ should be syntactically valid (285 ms)
    ✓ should have all TODO comments removed (1 ms)
    ✕ the body font-family should be `Arial, sans-serif` (7 ms)
    ✓ each <li> should have the CSS class `list-item` (8 ms)
    ✓ each <li> should rendered red (229 ms)

  ● Generated HTML › the body font-family should be `Arial, sans-serif`

    expect(received).toEqual(expected) // deep equality

    Expected: StringContaining "Arial"
    Received: ""

      25 |   test('the body font-family should be `Arial, sans-serif`', () => {
      26 |     const fontFamily = document.body.style.fontFamily;
    > 27 |     expect(fontFamily).toEqual(expect.stringContaining('Arial'));
         |                        ^
      28 |     expect(fontFamily).toEqual(expect.stringContaining('sans-serif'));
      29 |   });
      30 |

      at Object.toEqual (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:27:24)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 4 passed, 5 total
Snapshots:   0 total
Time:        6.79 s
Ran all test suites matching /ex2-aboutMe.test.js/i.
Waiting for the debugger to disconnect...
Waiting for the debugger to disconnect...
2022-10-02 11:39:15 info: ---------------------------------------
2022-10-02 11:39:15 info: >>> Running Unit Test `ex2-aboutMe` <<<
2022-10-02 11:39:15 info: ---------------------------------------
2022-10-02 11:39:26 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-aboutMe.test.js --colors
Debugger listening on ws://127.0.0.1:52589/ace4aecd-fe53-4311-8ddf-0959404e64be
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
Debugger listening on ws://127.0.0.1:52601/6f519fea-9f1c-478d-a476-d50c67dbbce2
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
 FAIL  2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js (6.425 s)
  Generated HTML
    ✓ should be syntactically valid (364 ms)
    ✓ should have all TODO comments removed (1 ms)
    ✕ the body font-family should be `Arial, sans-serif` (6 ms)
    ✓ each <li> should have the CSS class `list-item` (7 ms)
    ✓ each <li> should rendered red (73 ms)

  ● Generated HTML › the body font-family should be `Arial, sans-serif`

    expect(received).toEqual(expected) // deep equality

    Expected: StringContaining "Arial"
    Received: ""

      25 |   test('the body font-family should be `Arial, sans-serif`', () => {
      26 |     const fontFamily = document.body.style.fontFamily;
    > 27 |     expect(fontFamily).toEqual(expect.stringContaining('Arial'));
         |                        ^
      28 |     expect(fontFamily).toEqual(expect.stringContaining('sans-serif'));
      29 |   });
      30 |

      at Object.toEqual (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:27:24)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 4 passed, 5 total
Snapshots:   0 total
Time:        6.564 s, estimated 7 s
Ran all test suites matching /ex2-aboutMe.test.js/i.
Waiting for the debugger to disconnect...
Waiting for the debugger to disconnect...
2022-10-02 11:42:32 info: ---------------------------------------
2022-10-02 11:42:32 info: >>> Running Unit Test `ex2-aboutMe` <<<
2022-10-02 11:42:32 info: ---------------------------------------
2022-10-02 11:42:42 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-aboutMe.test.js --colors
Debugger listening on ws://127.0.0.1:53470/afbb47d1-b03c-4e6b-9c3c-702bf0a0fd5c
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
Debugger listening on ws://127.0.0.1:53482/1b53488d-c54f-47bf-ab38-864db3b123ae
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
 FAIL  2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js (5.62 s)
  Generated HTML
    ✓ should be syntactically valid (188 ms)
    ✓ should have all TODO comments removed (1 ms)
    ✕ the body font-family should be `Arial, sans-serif` (5 ms)
    ✓ each <li> should have the CSS class `list-item` (3 ms)
    ✓ each <li> should rendered red (66 ms)

  ● Generated HTML › the body font-family should be `Arial, sans-serif`

    expect(received).toEqual(expected) // deep equality

    Expected: StringContaining "Arial"
    Received: ""

      25 |   test('the body font-family should be `Arial, sans-serif`', () => {
      26 |     const fontFamily = document.body.style.fontFamily;
    > 27 |     expect(fontFamily).toEqual(expect.stringContaining('Arial'));
         |                        ^
      28 |     expect(fontFamily).toEqual(expect.stringContaining('sans-serif'));
      29 |   });
      30 |

      at Object.toEqual (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:27:24)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 4 passed, 5 total
Snapshots:   0 total
Time:        5.772 s, estimated 7 s
Ran all test suites matching /ex2-aboutMe.test.js/i.
Waiting for the debugger to disconnect...
Waiting for the debugger to disconnect...
2022-10-03 08:40:39 info: ---------------------------------------
2022-10-03 08:40:39 info: >>> Running Unit Test `ex2-aboutMe` <<<
2022-10-03 08:40:39 info: ---------------------------------------
2022-10-03 08:40:50 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-aboutMe.test.js --colors
Debugger listening on ws://127.0.0.1:64929/5a06631a-7db1-4e12-8db4-b82b20e3f55a
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
Debugger listening on ws://127.0.0.1:64941/e3b7ea31-89de-464c-bf14-3fbcce8bc0e7
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
 FAIL  2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js (6.158 s)
  Generated HTML
    ✓ should be syntactically valid (164 ms)
    ✓ should have all TODO comments removed
    ✕ the body font-family should be `Arial, sans-serif` (4 ms)
    ✕ each <li> should have the CSS class `list-item` (3 ms)
    ✕ each <li> should rendered red (153 ms)

  ● Generated HTML › the body font-family should be `Arial, sans-serif`

    expect(received).toEqual(expected) // deep equality

    Expected: StringContaining "Arial"
    Received: ""

      25 |   test('the body font-family should be `Arial, sans-serif`', () => {
      26 |     const fontFamily = document.body.style.fontFamily;
    > 27 |     expect(fontFamily).toEqual(expect.stringContaining('Arial'));
         |                        ^
      28 |     expect(fontFamily).toEqual(expect.stringContaining('sans-serif'));
      29 |   });
      30 |

      at Object.toEqual (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:27:24)

  ● Generated HTML › each <li> should have the CSS class `list-item`

    expect(received).toBeTruthy()

    Received: false

      32 |     const nodeList = document.querySelectorAll('li');
      33 |     const classNames = [...nodeList].map((node) => node.className);
    > 34 |     expect(classNames.every((name) => name === 'list-item')).toBeTruthy();
         |                                                              ^
      35 |   });
      36 |
      37 |   test('each <li> should rendered red', () => {

      at Object.toBeTruthy (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:34:62)

  ● Generated HTML › each <li> should rendered red

    expect(received).toBeTruthy()

    Received: false

      40 |       (node) => window.getComputedStyle(node).color
      41 |     );
    > 42 |     expect(colors.every((color) => color === 'red')).toBeTruthy();
         |                                                      ^
      43 |   });
      44 | });
      45 |

      at Object.toBeTruthy (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:42:54)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 2 passed, 5 total
Snapshots:   0 total
Time:        6.514 s
Ran all test suites matching /ex2-aboutMe.test.js/i.
Waiting for the debugger to disconnect...
Waiting for the debugger to disconnect...
2022-10-03 08:43:10 info: ---------------------------------------
2022-10-03 08:43:10 info: >>> Running Unit Test `ex2-aboutMe` <<<
2022-10-03 08:43:10 info: ---------------------------------------
2022-10-03 08:43:21 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-aboutMe.test.js --colors
Debugger listening on ws://127.0.0.1:49207/8dcf61d5-82af-4281-b45b-e9d04008b270
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
Debugger listening on ws://127.0.0.1:49219/19bfcc0d-980b-40df-b385-07a7ef6bf2df
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
 FAIL  2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js (6.51 s)
  Generated HTML
    ✓ should be syntactically valid (214 ms)
    ✓ should have all TODO comments removed (1 ms)
    ✕ the body font-family should be `Arial, sans-serif` (4 ms)
    ✓ each <li> should have the CSS class `list-item` (3 ms)
    ✓ each <li> should rendered red (62 ms)

  ● Generated HTML › the body font-family should be `Arial, sans-serif`

    expect(received).toEqual(expected) // deep equality

    Expected: StringContaining "Arial"
    Received: ""

      25 |   test('the body font-family should be `Arial, sans-serif`', () => {
      26 |     const fontFamily = document.body.style.fontFamily;
    > 27 |     expect(fontFamily).toEqual(expect.stringContaining('Arial'));
         |                        ^
      28 |     expect(fontFamily).toEqual(expect.stringContaining('sans-serif'));
      29 |   });
      30 |

      at Object.toEqual (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:27:24)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 4 passed, 5 total
Snapshots:   0 total
Time:        6.608 s, estimated 7 s
Ran all test suites matching /ex2-aboutMe.test.js/i.
Waiting for the debugger to disconnect...
Waiting for the debugger to disconnect...
2022-10-03 08:43:45 info: ---------------------------------------
2022-10-03 08:43:45 info: >>> Running Unit Test `ex2-aboutMe` <<<
2022-10-03 08:43:45 info: ---------------------------------------
2022-10-03 08:43:55 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-aboutMe.test.js --colors
Debugger listening on ws://127.0.0.1:49415/cb171508-6041-4bed-9725-14432740f7f9
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
Debugger listening on ws://127.0.0.1:49426/f3021c1b-a127-44f1-86d0-807086f6e68e
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
 FAIL  2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js (5.564 s)
  Generated HTML
    ✓ should be syntactically valid (206 ms)
    ✓ should have all TODO comments removed (1 ms)
    ✕ the body font-family should be `Arial, sans-serif` (4 ms)
    ✓ each <li> should have the CSS class `list-item` (3 ms)
    ✓ each <li> should rendered red (162 ms)

  ● Generated HTML › the body font-family should be `Arial, sans-serif`

    expect(received).toEqual(expected) // deep equality

    Expected: StringContaining "Arial"
    Received: ""

      25 |   test('the body font-family should be `Arial, sans-serif`', () => {
      26 |     const fontFamily = document.body.style.fontFamily;
    > 27 |     expect(fontFamily).toEqual(expect.stringContaining('Arial'));
         |                        ^
      28 |     expect(fontFamily).toEqual(expect.stringContaining('sans-serif'));
      29 |   });
      30 |

      at Object.toEqual (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:27:24)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 4 passed, 5 total
Snapshots:   0 total
Time:        5.703 s, estimated 7 s
Ran all test suites matching /ex2-aboutMe.test.js/i.
Waiting for the debugger to disconnect...
Waiting for the debugger to disconnect...
2022-10-03 08:44:30 info: ---------------------------------------
2022-10-03 08:44:30 info: >>> Running Unit Test `ex2-aboutMe` <<<
2022-10-03 08:44:30 info: ---------------------------------------
2022-10-03 08:44:40 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-aboutMe.test.js --colors
Debugger listening on ws://127.0.0.1:49638/78b9d077-cf2a-480d-8cc5-1d1fdbe713c4
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
Debugger listening on ws://127.0.0.1:49646/45192d32-0d72-4425-86bd-97e45fb67603
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
 FAIL  2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js (5.437 s)
  Generated HTML
    ✓ should be syntactically valid (210 ms)
    ✓ should have all TODO comments removed (1 ms)
    ✕ the body font-family should be `Arial, sans-serif` (5 ms)
    ✓ each <li> should have the CSS class `list-item` (4 ms)
    ✓ each <li> should rendered red (75 ms)

  ● Generated HTML › the body font-family should be `Arial, sans-serif`

    expect(received).toEqual(expected) // deep equality

    Expected: StringContaining "Arial"
    Received: ""

      25 |   test('the body font-family should be `Arial, sans-serif`', () => {
      26 |     const fontFamily = document.body.style.fontFamily;
    > 27 |     expect(fontFamily).toEqual(expect.stringContaining('Arial'));
         |                        ^
      28 |     expect(fontFamily).toEqual(expect.stringContaining('sans-serif'));
      29 |   });
      30 |

      at Object.toEqual (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:27:24)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 4 passed, 5 total
Snapshots:   0 total
Time:        5.614 s, estimated 6 s
Ran all test suites matching /ex2-aboutMe.test.js/i.
Waiting for the debugger to disconnect...
Waiting for the debugger to disconnect...
2022-10-03 08:46:25 info: ---------------------------------------
2022-10-03 08:46:25 info: >>> Running Unit Test `ex2-aboutMe` <<<
2022-10-03 08:46:25 info: ---------------------------------------
2022-10-03 08:46:35 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-aboutMe.test.js --colors
Debugger listening on ws://127.0.0.1:50130/8eb77d29-9e64-4fb3-8933-4f42c93548ab
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
Debugger listening on ws://127.0.0.1:50142/eb0b9ca8-06c3-49cb-9605-6758c3c2d6ed
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
 FAIL  2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js (5.888 s)
  Generated HTML
    ✓ should be syntactically valid (264 ms)
    ✓ should have all TODO comments removed (1 ms)
    ✕ the body font-family should be `Arial, sans-serif` (6 ms)
    ✓ each <li> should have the CSS class `list-item` (3 ms)
    ✓ each <li> should rendered red (182 ms)

  ● Generated HTML › the body font-family should be `Arial, sans-serif`

    expect(received).toEqual(expected) // deep equality

    Expected: StringContaining "Arial"
    Received: ""

      25 |   test('the body font-family should be `Arial, sans-serif`', () => {
      26 |     const fontFamily = document.body.style.fontFamily;
    > 27 |     expect(fontFamily).toEqual(expect.stringContaining('Arial'));
         |                        ^
      28 |     expect(fontFamily).toEqual(expect.stringContaining('sans-serif'));
      29 |   });
      30 |

      at Object.toEqual (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:27:24)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 4 passed, 5 total
Snapshots:   0 total
Time:        6.051 s
Ran all test suites matching /ex2-aboutMe.test.js/i.
Waiting for the debugger to disconnect...
Waiting for the debugger to disconnect...
2022-10-03 12:30:41 info: ---------------------------------------
2022-10-03 12:30:41 info: >>> Running Unit Test `ex2-aboutMe` <<<
2022-10-03 12:30:41 info: ---------------------------------------
2022-10-03 12:30:53 info: All unit tests passed.
2022-10-03 12:31:05 info: All steps were completed successfully
2022-10-03 12:31:43 info: ----------------------------------------
2022-10-03 12:31:43 info: >>> Running Unit Test `ex1-bookList` <<<
2022-10-03 12:31:43 info: ----------------------------------------
2022-10-03 12:31:56 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-bookList.test.js --colors
Debugger listening on ws://127.0.0.1:51896/037ba9f2-5bd2-4f61-ad5d-a852e77fd389
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
Debugger listening on ws://127.0.0.1:51899/2653bf97-93a6-47da-ad03-01e7e21713da
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
 FAIL  2-Browsers/Week1/unit-tests/ex1-bookList.test.js (7.013 s)
  Generated HTML
    ✕ HTML should be syntactically valid (228 ms)
    ✓ should have all TODO comments removed
    ✓ should contain a <ul> that is a child of <div id="bookList"> (2 ms)
    ✕ should contain a <ul> with 3 <li> elements (4 ms)
    ✓ should contain an <li> with title and author for each book of the `myBooks` array (2 ms)
    ✓ should contain an <img> element for each book (1 ms)

  ● Generated HTML › HTML should be syntactically valid

    expect(received).toBe(expected) // Object.is equality

    Expected: ""
    Received: "
    inline
      11:164  error  <img> is missing required \"alt\" attribute  wcag/h37
      11:357  error  <img> is missing required \"alt\" attribute  wcag/h37
      11:541  error  <img> is missing required \"alt\" attribute  wcag/h37·
    ✖ 3 problems (3 errors, 0 warnings)
    "

      44 |   const { results } = htmlValidate.validateString(htmlText);
      45 |   const validationReport = stylish(results);
    > 46 |   expect(validationReport).toBe('');
         |                            ^
      47 | }
      48 |
      49 | module.exports = {

      at toBe (test-runner/jsdom-helpers.js:46:28)
      at Object.validateHTML (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:42:5)

  ● Generated HTML › should contain a <ul> with 3 <li> elements

    expect(received).toBe(expected) // Object.is equality

    Expected: 3
    Received: 1

      52 |     const nodeList = document.querySelectorAll('ul > li');
      53 |     const result = nodeList ? nodeList.length : 0;
    > 54 |     expect(result).toBe(3);
         |                    ^
      55 |   });
      56 |
      57 |   test('should contain an <li> with title and author for each book of the `myBooks` array', () => {

      at Object.toBe (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:54:20)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 4 passed, 6 total
Snapshots:   0 total
Time:        7.223 s
Ran all test suites matching /ex1-bookList.test.js/i.
Waiting for the debugger to disconnect...
Waiting for the debugger to disconnect...
2022-10-03 01:36:50 info: ----------------------------------------
2022-10-03 01:36:50 info: >>> Running Unit Test `ex1-bookList` <<<
2022-10-03 01:36:50 info: ----------------------------------------
2022-10-03 01:37:00 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-bookList.test.js --colors
Debugger listening on ws://127.0.0.1:57597/f1ae1167-d5b5-49fc-8b05-702b7c49ab68
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
Debugger listening on ws://127.0.0.1:57600/5e3445bb-2888-4cff-95fe-f53935ac52da
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
 FAIL  2-Browsers/Week1/unit-tests/ex1-bookList.test.js (5.291 s)
  Generated HTML
    ✕ HTML should be syntactically valid (161 ms)
    ✓ should have all TODO comments removed (1 ms)
    ✓ should contain a <ul> that is a child of <div id="bookList"> (3 ms)
    ✓ should contain a <ul> with 3 <li> elements (2 ms)
    ✓ should contain an <li> with title and author for each book of the `myBooks` array (2 ms)
    ✓ should contain an <img> element for each book (1 ms)

  ● Generated HTML › HTML should be syntactically valid

    expect(received).toBe(expected) // Object.is equality

    Expected: ""
    Received: "
    inline
      11:130  error  <img> is missing required \"alt\" attribute  wcag/h37
      11:309  error  <img> is missing required \"alt\" attribute  wcag/h37
      11:479  error  <img> is missing required \"alt\" attribute  wcag/h37·
    ✖ 3 problems (3 errors, 0 warnings)
    "

      44 |   const { results } = htmlValidate.validateString(htmlText);
      45 |   const validationReport = stylish(results);
    > 46 |   expect(validationReport).toBe('');
         |                            ^
      47 | }
      48 |
      49 | module.exports = {

      at toBe (test-runner/jsdom-helpers.js:46:28)
      at Object.validateHTML (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:42:5)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 5 passed, 6 total
Snapshots:   0 total
Time:        5.521 s, estimated 8 s
Ran all test suites matching /ex1-bookList.test.js/i.
Waiting for the debugger to disconnect...
Waiting for the debugger to disconnect...
2022-10-03 02:00:48 info: ----------------------------------------
2022-10-03 02:00:48 info: >>> Running Unit Test `ex1-bookList` <<<
2022-10-03 02:00:48 info: ----------------------------------------
2022-10-03 02:00:56 info: All unit tests passed.
2022-10-03 02:01:03 info: All steps were completed successfully
2022-10-03 05:25:53 info: ------------------------------------------
2022-10-03 05:25:53 info: >>> Running Unit Test `ex3-hijackLogo` <<<
2022-10-03 05:25:53 info: ------------------------------------------
2022-10-03 05:25:59 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-hijackLogo.test.js --colors
Debugger listening on ws://127.0.0.1:62382/aae55a63-abb0-4ae6-8ec7-6915050c57cd
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
Debugger listening on ws://127.0.0.1:62389/87101cd0-fee3-43e5-aac3-30f9b9b39d35
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
 FAIL  2-Browsers/Week1/unit-tests/ex3-hijackLogo.test.js
  hijackLogo
    ✕ should have all TODO comments removed (3 ms)
    ✓ should set the `src` property
    ✕ should set the `srcset` property

  ● hijackLogo › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.toBeFalsy (test-runner/unit-test-helpers.js:105:42)

  ● hijackLogo › should set the `srcset` property

    expect(received).toBeDefined()

    Received: undefined

      33 |
      34 |   test('should set the `srcset` property', () => {
    > 35 |     expect(state.srcset).toBeDefined();
         |                          ^
      36 |   });
      37 | });
      38 |

      at Object.toBeDefined (2-Browsers/Week1/unit-tests/ex3-hijackLogo.test.js:35:26)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 1 passed, 3 total
Snapshots:   0 total
Time:        1.207 s
Ran all test suites matching /ex3-hijackLogo.test.js/i.
Waiting for the debugger to disconnect...
Waiting for the debugger to disconnect...
2022-10-03 05:26:08 error: *** Spell Checker Report ***

ex3-hijackLogo.js:17:29 - Unknown word (googlelogo)
ex3-hijackLogo.js:17:43 - Unknown word (googlelogo)

2022-10-03 05:29:30 info: ------------------------------------------
2022-10-03 05:29:30 info: >>> Running Unit Test `ex3-hijackLogo` <<<
2022-10-03 05:29:30 info: ------------------------------------------
2022-10-03 05:29:36 info: All unit tests passed.
2022-10-03 05:29:43 error: *** Spell Checker Report ***

ex3-hijackLogo.js:16:29 - Unknown word (googlelogo)
ex3-hijackLogo.js:16:43 - Unknown word (googlelogo)
ex3-hijackLogo.js:22:29 - Unknown word (googlelogo)
ex3-hijackLogo.js:22:43 - Unknown word (googlelogo)

2022-10-03 07:20:23 info: ------------------------------------------
2022-10-03 07:20:23 info: >>> Running Unit Test `ex3-hijackLogo` <<<
2022-10-03 07:20:23 info: ------------------------------------------
2022-10-03 07:20:28 info: All unit tests passed.
2022-10-03 07:20:36 info: All steps were completed successfully
2022-10-04 02:14:52 info: --------------------------------------------
2022-10-04 02:14:52 info: >>> Running Unit Test `ex4-whatsTheTime` <<<
2022-10-04 02:14:52 info: --------------------------------------------
2022-10-04 02:15:09 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-whatsTheTime.test.js --colors
Debugger listening on ws://127.0.0.1:58730/5962b184-406e-43e2-8bb6-3170980136fd
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
Debugger listening on ws://127.0.0.1:58733/55d9836e-be7b-4c56-ba08-4bf3c269d1dd
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
 FAIL  2-Browsers/Week1/unit-tests/ex4-whatsTheTime.test.js (9.486 s)
  whatsTheTime
    ✓ HTML should be syntactically valid (164 ms)
    ✓ should have all TODO comments removed (3 ms)
    ✓ should use `setInterval()` (1 ms)
    ✓ should not call `setInterval()` more than once (2003 ms)
    ✕ should use `window.onload` or `window.addEventListener()` for the `load` or `DOMContentLoaded` event (3 ms)
    ✓ `window.onload` or `window.addEventListener` should not call its event handler function (1 ms)

  ● whatsTheTime › should use `window.onload` or `window.addEventListener()` for the `load` or `DOMContentLoaded` event

    expect(received).toBeDefined()

    Received: undefined

      63 |
      64 |   test('should use `window.onload` or `window.addEventListener()` for the `load` or `DOMContentLoaded` event', () => {
    > 65 |     expect(state.onload).toBeDefined();
         |                          ^
      66 |   });
      67 |
      68 |   test('`window.onload` or `window.addEventListener` should not call its event handler function', () => {

      at Object.toBeDefined (2-Browsers/Week1/unit-tests/ex4-whatsTheTime.test.js:65:26)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 5 passed, 6 total
Snapshots:   0 total
Time:        9.938 s
Ran all test suites matching /ex4-whatsTheTime.test.js/i.
Waiting for the debugger to disconnect...
Waiting for the debugger to disconnect...
2022-10-04 02:15:13 error: *** ESLint Report ***

ex4-whatsTheTime/index.js
  20:3  warning  Remove commented-out code  hyf/no-commented-out-code

✖ 1 problem (0 errors, 1 warning)


2022-10-04 02:18:14 info: --------------------------------------------
2022-10-04 02:18:14 info: >>> Running Unit Test `ex4-whatsTheTime` <<<
2022-10-04 02:18:14 info: --------------------------------------------
2022-10-04 02:18:27 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-whatsTheTime.test.js --colors
Debugger listening on ws://127.0.0.1:59146/d33664ab-6e74-4012-8e00-b97db17b4bde
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
Debugger listening on ws://127.0.0.1:59150/13e74926-0a87-4c17-ae78-96f7cd92bcc8
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
 FAIL  2-Browsers/Week1/unit-tests/ex4-whatsTheTime.test.js (7.399 s)
  whatsTheTime
    ✓ HTML should be syntactically valid (154 ms)
    ✓ should have all TODO comments removed (1 ms)
    ✓ should use `setInterval()` (1 ms)
    ✓ should not call `setInterval()` more than once (2002 ms)
    ✓ should use `window.onload` or `window.addEventListener()` for the `load` or `DOMContentLoaded` event (1 ms)
    ✕ `window.onload` or `window.addEventListener` should not call its event handler function (2 ms)

  ● whatsTheTime › `window.onload` or `window.addEventListener` should not call its event handler function

    expect(received).not.toBeDefined()

    Received: true

      67 |
      68 |   test('`window.onload` or `window.addEventListener` should not call its event handler function', () => {
    > 69 |     expect(state.callError).not.toBeDefined();
         |                                 ^
      70 |   });
      71 | });
      72 |

      at Object.toBeDefined (2-Browsers/Week1/unit-tests/ex4-whatsTheTime.test.js:69:33)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 5 passed, 6 total
Snapshots:   0 total
Time:        7.875 s, estimated 10 s
Ran all test suites matching /ex4-whatsTheTime.test.js/i.
Waiting for the debugger to disconnect...
Waiting for the debugger to disconnect...
2022-10-04 02:27:14 info: --------------------------------------------
2022-10-04 02:27:14 info: >>> Running Unit Test `ex4-whatsTheTime` <<<
2022-10-04 02:27:14 info: --------------------------------------------
2022-10-04 02:27:26 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-whatsTheTime.test.js --colors
Debugger listening on ws://127.0.0.1:59555/df569518-b841-4895-bbb5-cf416db97703
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
Debugger listening on ws://127.0.0.1:59558/1c4f7fa3-702c-4d16-8ddf-eba4862ea6cd
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
 FAIL  2-Browsers/Week1/unit-tests/ex4-whatsTheTime.test.js (7.687 s)
  whatsTheTime
    ✓ HTML should be syntactically valid (310 ms)
    ✓ should have all TODO comments removed
    ✓ should use `setInterval()`
    ✓ should not call `setInterval()` more than once (2002 ms)
    ✓ should use `window.onload` or `window.addEventListener()` for the `load` or `DOMContentLoaded` event (1 ms)
    ✕ `window.onload` or `window.addEventListener` should not call its event handler function (2 ms)

  ● whatsTheTime › `window.onload` or `window.addEventListener` should not call its event handler function

    expect(received).not.toBeDefined()

    Received: true

      67 |
      68 |   test('`window.onload` or `window.addEventListener` should not call its event handler function', () => {
    > 69 |     expect(state.callError).not.toBeDefined();
         |                                 ^
      70 |   });
      71 | });
      72 |

      at Object.toBeDefined (2-Browsers/Week1/unit-tests/ex4-whatsTheTime.test.js:69:33)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 5 passed, 6 total
Snapshots:   0 total
Time:        7.896 s, estimated 8 s
Ran all test suites matching /ex4-whatsTheTime.test.js/i.
Waiting for the debugger to disconnect...
Waiting for the debugger to disconnect...
2022-10-04 07:06:36 info: ---------------------------------------
2022-10-04 07:06:36 info: >>> Running Unit Test `ex5-catWalk` <<<
2022-10-04 07:06:36 info: ---------------------------------------
2022-10-04 07:06:47 error: *** Unit Test Error Report ***

Command failed: npx jest ex5-catWalk.test.js --colors
Debugger listening on ws://127.0.0.1:56723/d4fe3a6a-cb04-416c-a1eb-2479e74e92f3
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
Debugger listening on ws://127.0.0.1:56726/25bf7922-0ac1-4ff5-a231-4a3278da98a9
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
 FAIL  2-Browsers/Week1/unit-tests/ex5-catWalk.test.js (5.435 s)
  catWalk
    ✓ HTML should be syntactically valid (211 ms)
    ✓ should have all TODO comments removed (1 ms)
    ✓ should use `setInterval()` and/or `setTimeout()`
    ✓ should use `window.onload` or `window.addEventListener()` for the `load` or `DOMContentLoaded` event
    ✕ `window.onload` or `window.addEventListener` should not call its event handler function (3 ms)

  ● catWalk › `window.onload` or `window.addEventListener` should not call its event handler function

    expect(received).not.toBeDefined()

    Received: true

      54 |
      55 |   test('`window.onload` or `window.addEventListener` should not call its event handler function', () => {
    > 56 |     expect(state.callError).not.toBeDefined();
         |                                 ^
      57 |   });
      58 | });
      59 |

      at Object.toBeDefined (2-Browsers/Week1/unit-tests/ex5-catWalk.test.js:56:33)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 4 passed, 5 total
Snapshots:   0 total
Time:        5.666 s
Ran all test suites matching /ex5-catWalk.test.js/i.
Waiting for the debugger to disconnect...
Waiting for the debugger to disconnect...
2022-10-04 07:39:57 info: ---------------------------------------
2022-10-04 07:39:57 info: >>> Running Unit Test `ex5-catWalk` <<<
2022-10-04 07:39:57 info: ---------------------------------------
2022-10-04 07:40:08 info: All unit tests passed.
2022-10-04 07:40:16 info: All steps were completed successfully
2022-10-04 07:42:11 info: --------------------------------------------
2022-10-04 07:42:11 info: >>> Running Unit Test `ex4-whatsTheTime` <<<
2022-10-04 07:42:11 info: --------------------------------------------
2022-10-04 07:42:23 info: All unit tests passed.
2022-10-04 07:42:32 info: All steps were completed successfully
2022-10-13 09:16:52 info: --------------------------------------------
2022-10-13 09:16:52 info: >>> Running Unit Test `ex4-whatsTheTime` <<<
2022-10-13 09:16:52 info: --------------------------------------------
2022-10-13 09:17:04 info: All unit tests passed.
2022-10-13 09:17:09 error: *** Spell Checker Report ***

TypeError: lint_1.LintRequest is not a constructor
    at Object.lint (/Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/cspell/dist/application.js:41:17)
    at Command.<anonymous> (/Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/cspell/dist/commandLint.js:104:20)
    at Command.listener [as _actionHandler] (/Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/commander/lib/command.js:482:17)
    at /Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/commander/lib/command.js:1265:65
    at Command._chainOrCall (/Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/commander/lib/command.js:1159:12)
    at Command._parseCommand (/Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/commander/lib/command.js:1265:27)
    at /Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/commander/lib/command.js:1063:27
    at Command._chainOrCall (/Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/commander/lib/command.js:1159:12)
    at Command._dispatchSubcommand (/Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/commander/lib/command.js:1059:23)
    at Command._parseCommand (/Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/commander/lib/command.js:1240:19)

2022-10-13 09:23:31 info: ---------------------------------------
2022-10-13 09:23:31 info: >>> Running Unit Test `ex2-aboutMe` <<<
2022-10-13 09:23:31 info: ---------------------------------------
2022-10-13 09:23:41 info: All unit tests passed.
2022-10-13 09:23:47 error: *** Spell Checker Report ***

TypeError: lint_1.LintRequest is not a constructor
    at Object.lint (/Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/cspell/dist/application.js:41:17)
    at Command.<anonymous> (/Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/cspell/dist/commandLint.js:104:20)
    at Command.listener [as _actionHandler] (/Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/commander/lib/command.js:482:17)
    at /Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/commander/lib/command.js:1265:65
    at Command._chainOrCall (/Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/commander/lib/command.js:1159:12)
    at Command._parseCommand (/Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/commander/lib/command.js:1265:27)
    at /Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/commander/lib/command.js:1063:27
    at Command._chainOrCall (/Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/commander/lib/command.js:1159:12)
    at Command._dispatchSubcommand (/Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/commander/lib/command.js:1059:23)
    at Command._parseCommand (/Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/commander/lib/command.js:1240:19)

2022-10-13 10:57:40 info: ----------------------------------------
2022-10-13 10:57:40 info: >>> Running Unit Test `ex1-bookList` <<<
2022-10-13 10:57:40 info: ----------------------------------------
2022-10-13 10:57:50 info: All unit tests passed.
2022-10-13 10:57:57 error: *** Spell Checker Report ***

TypeError: lint_1.LintRequest is not a constructor
    at Object.lint (/Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/cspell/dist/application.js:41:17)
    at Command.<anonymous> (/Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/cspell/dist/commandLint.js:104:20)
    at Command.listener [as _actionHandler] (/Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/commander/lib/command.js:482:17)
    at /Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/commander/lib/command.js:1265:65
    at Command._chainOrCall (/Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/commander/lib/command.js:1159:12)
    at Command._parseCommand (/Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/commander/lib/command.js:1265:27)
    at /Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/commander/lib/command.js:1063:27
    at Command._chainOrCall (/Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/commander/lib/command.js:1159:12)
    at Command._dispatchSubcommand (/Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/commander/lib/command.js:1059:23)
    at Command._parseCommand (/Users/yuliannikolaiev/Desktop/Homework-class40-1/node_modules/commander/lib/command.js:1240:19)

